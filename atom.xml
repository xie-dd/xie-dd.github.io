<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>有限元分析与编程</title>
  
  
  <link href="https://19970622.xyz/atom.xml" rel="self"/>
  
  <link href="https://19970622.xyz/"/>
  <updated>2025-04-10T16:00:00.000Z</updated>
  <id>https://19970622.xyz/</id>
  
  <author>
    <name>Xdd</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ParaView使用与VTK文件格式</title>
    <link href="https://19970622.xyz/posts/250409/"/>
    <id>https://19970622.xyz/posts/250409/</id>
    <published>2025-04-08T16:00:00.000Z</published>
    <updated>2025-04-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>paraview 案例(中英字幕): <a href="https://www.bilibili.com/video/BV1Jt4y1Q7wW">https://www.bilibili.com/video/BV1Jt4y1Q7wW</a></p><h2 id="绘制云图"><a href="#绘制云图" class="headerlink" title="绘制云图"></a>绘制云图</h2><h2 id="VTK-相关"><a href="#VTK-相关" class="headerlink" title="VTK 相关"></a>VTK 相关</h2><p>vtk 官网：<a href="https://vtk.org/">https://vtk.org/</a></p><p>vtk 文件格式：<a href="https://www.princeton.edu/~efeibush/viscourse/vtk.pdf">https://www.princeton.edu/~efeibush&#x2F;viscourse&#x2F;vtk.pdf</a></p><h4 id="一个案例"><a href="#一个案例" class="headerlink" title="一个案例"></a>一个案例</h4><p>来源：<a href="https://www.bilibili.com/opus/914557193439674403">https://www.bilibili.com/opus/914557193439674403</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># vtk DataFile Version 3.1</span><br><span class="line">USELESS LINE</span><br><span class="line">ASCII</span><br><span class="line">DATASET UNSTRUCTURED_GRID</span><br><span class="line">POINTS    12 float</span><br><span class="line">0 0 0</span><br><span class="line">1 0 0</span><br><span class="line">1 1 0</span><br><span class="line">0 1 0</span><br><span class="line">0 0 1</span><br><span class="line">1 0 1</span><br><span class="line">1 1 1</span><br><span class="line">0 1 1</span><br><span class="line">2 0 0</span><br><span class="line">2 1 0</span><br><span class="line">2 0 1</span><br><span class="line">2 1 1</span><br><span class="line">CELLS    2   18</span><br><span class="line">      8      0      1      2      3      4      5      6      7</span><br><span class="line">      8      1      8      9      2      5     10     11      6</span><br><span class="line">CELL_TYPES    2</span><br><span class="line">12</span><br><span class="line">12</span><br><span class="line">POINT_DATA    12</span><br><span class="line">SCALARS v float</span><br><span class="line">LOOKUP_TABLE default</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="一个模板"><a href="#一个模板" class="headerlink" title="一个模板"></a>一个模板</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># vtk DataFile Version 3.0</span><br><span class="line">output2vtkByXdd</span><br><span class="line">ASCII</span><br><span class="line">DATASET UNSTRUCTURED_GRID</span><br><span class="line">POINTS 7359 double</span><br><span class="line">    4.500000000000000e+02    1.800000000000000e-14    0.000000000000000e+00</span><br><span class="line">    4.000000000000000e+02    0.000000000000000e+00    0.000000000000000e+00</span><br><span class="line">    ...</span><br><span class="line">CELLS 11523  103707</span><br><span class="line">         8       130       131        30        36       136       141        57        58</span><br><span class="line">         8       136       141        57        58       137       143        59        60</span><br><span class="line">      ...</span><br><span class="line">CELL_TYPES 11523</span><br><span class="line">        12</span><br><span class="line">        12</span><br><span class="line">      ...</span><br><span class="line">POINT_DATA 7359</span><br><span class="line">SCALARS ux float</span><br><span class="line">    1.803581750466487e-01</span><br><span class="line">    1.953078934248767e-01</span><br><span class="line">    ...</span><br><span class="line">POINT_DATA 7359</span><br><span class="line">Vectors aVectorResu double</span><br><span class="line">    1.803581750466487e-01   -1.359527956905437e-05    1.108509172624865e-01</span><br><span class="line">    1.953078934248767e-01    1.730515495530002e-05    1.083849176372485e-01</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h4 id="CELL-TYPES"><a href="#CELL-TYPES" class="headerlink" title="CELL_TYPES"></a>CELL_TYPES</h4><p>vtk 文件格式：<a href="https://www.princeton.edu/~efeibush/viscourse/vtk.pdf">https://www.princeton.edu/~efeibush&#x2F;viscourse&#x2F;vtk.pdf</a></p><p>蓝奏云备份：<a href="https://xdd1997.lanzoue.com/imojH2sxs5jg">https://xdd1997.lanzoue.com/imojH2sxs5jg</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">点 1</span><br><span class="line">线 3</span><br><span class="line"></span><br><span class="line">一阶三角形 5</span><br><span class="line">一阶四边形 9</span><br><span class="line">一阶四面体 10</span><br><span class="line">一阶六面体 12</span><br><span class="line"></span><br><span class="line">二阶三角形 22</span><br><span class="line">二阶四边形 23</span><br><span class="line">二阶四面体 24</span><br><span class="line">二阶六面体 25</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20250407210440-es8jg87.png"><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202504111930986.png"></p><h4 id="LOOKUP-TABLE"><a href="#LOOKUP-TABLE" class="headerlink" title="LOOKUP_TABLE"></a>LOOKUP_TABLE</h4><p>LOOKUP_TABLE 是 RGB 颜色对照表，是可选参数，可以不写</p><h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><ul><li>如果 vtk 文件正常，是不用选择 reader 的</li><li>对于矢量 vectors 好像不能指定<code>LOOKUP_TABLE</code>，现在的测试结果是直接不指定这一项就行</li><li>单元的结点编号要从 0 开始</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;paraview 案例(中英字幕): &lt;a href=&quot;https://www.bilibili.com/video/BV1Jt4y1Q7w</summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="paraview" scheme="https://19970622.xyz/tags/paraview/"/>
    
    <category term="vtk" scheme="https://19970622.xyz/tags/vtk/"/>
    
  </entry>
  
  <entry>
    <title>VS2019配置OCCT7.7.0环境-AIS显示形状</title>
    <link href="https://19970622.xyz/posts/140101/"/>
    <id>https://19970622.xyz/posts/140101/</id>
    <published>2025-01-06T16:00:00.000Z</published>
    <updated>2025-01-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>官网下载：<a href="https://dev.opencascade.org/release">https://dev.opencascade.org/release</a></p><p>开发文档: <a href="https://dev.opencascade.org/doc/overview/html/">https://dev.opencascade.org/doc/overview/html/</a></p><p>API 文档：</p><ul><li>联网(无搜索框)：<a href="https://dev.opencascade.org/doc/refman/html/index.html">https://dev.opencascade.org/doc/refman/html/index.html</a></li><li>本地(有搜索框)：opencascade-7.7.0&#x2F;doc&#x2F;refman&#x2F;html&#x2F;index.html，或搜索 module_draw.html</li></ul><h2 id="VS2019-配置-OCCT7-7-0-环境"><a href="#VS2019-配置-OCCT7-7-0-环境" class="headerlink" title="VS2019 配置 OCCT7.7.0 环境"></a>VS2019 配置 OCCT7.7.0 环境</h2><h3 id="编译-OCCT-静态库与动态库文件"><a href="#编译-OCCT-静态库与动态库文件" class="headerlink" title="编译 OCCT 静态库与动态库文件"></a>编译 OCCT 静态库与动态库文件</h3><p>教程：<a href="https://blog.csdn.net/xindashuai/article/details/131940740">手把手教你 VS2019 编译、配置 Opencascade</a></p><ol><li>进入<a href="https://dev.opencascade.org/release">https://dev.opencascade.org/release</a>，再点击 Previous releases，点击<a href="https://dev.opencascade.org/release/previous#node-84228">Open CASCADE Technology 7.7.0 - 07.11.2022</a>，注册，可下载到一个 exe 安装包</li><li>双击安装包，可一路默认安装</li><li>修改 C:\OpenCASCADE-7.7.0-vc14-64\opencascade-7.7.0\custom.bat 中 vcvarsall.bat 的路径</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 教程说把这一行修改成vcvarsall.bat的绝对路径，我实测就这样不改也行</span></span><br><span class="line">set <span class="string">&quot;VCVARS=%VS100COMNTOOLS%..\..\VC\vcvarsall.bat&quot;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>打开 C:\OpenCASCADE-7.7.0-vc14-64\opencascade-7.7.0\msvc.bat，把第五行修改为如下形式</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call <span class="string">&quot;%~dp0env.bat&quot;</span> vc142 Win64 %<span class="number">3</span></span><br></pre></td></tr></table></figure><ol><li>双击 msvc.bat 可自动打开 VS 软件</li><li>在解决方案上右键—属性—配置—最上面改成：Release, x64</li><li>在解决方案上右键–重新生成解决方案，最后输出如下</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">========== 全部重新生成: 成功 <span class="number">67</span> 个，失败 <span class="number">0</span> 个，跳过 <span class="number">0</span> 个 ==========</span><br></pre></td></tr></table></figure><ol><li>此时 C:\OpenCASCADE-7.7.0-vc14-64\opencascade-7.7.0\win64\vc14 会有 bin,lib,obj 三个文件夹，这就是 occt 编译结果</li></ol><h3 id="使用-OCCT-库文件"><a href="#使用-OCCT-库文件" class="headerlink" title="使用 OCCT 库文件"></a>使用 OCCT 库文件</h3><p>参考方法</p><p>视频英文原版：<a href="https://www.youtube.com/playlist?list=PL_WFkJrQIY2iVVchOPhl77xl432jeNYfQ">https://www.youtube.com/playlist?list=PL_WFkJrQIY2iVVchOPhl77xl432jeNYfQ</a></p><p>视频中文译版：<a href="https://www.bilibili.com/video/BV1yM411x7Xx">https://www.bilibili.com/video/BV1yM411x7Xx</a></p><p>文字中文译版：<a href="https://blog.csdn.net/sunlin0oo/article/details/126255593">OCCT 教程二：在 visual studio 上创建一个 occt 工程_occt 教学-CSDN 博客</a></p><ol><li>打开 VS2019，新建 C++空项目</li><li>在项目文件夹下新建一个 OCCT770 的文件夹，将前面得到的 bin，lib，以及一个 inc 文件夹拷贝到 OCCT770 文件夹下。其中 inc 文件夹在 C:\OpenCASCADE-7.7.0-vc14-64\opencascade-7.7.0 里面</li><li>在项目右键—属性—开始配置环境<ul><li>将最上面的配置与平台改成：Release, x64</li><li>C&#x2F;C++—常规—附加包含目录—添加一条指向 OCCT770\inc</li><li>链接器—常规—附加库目录—指向 OCCT770\lib</li><li>调试—环境—添加 PATH&#x3D;%PATH%;$(SolutionDir)\OCCT770\bin;，这里其实是用&#x3D;添加了两个路径，其中路径可写绝对路径</li><li>连接器—输入—附加依赖项目，可以仅添加你需要的 lib 文件名称，也添加 OCCT770\lib 下所有 lib 文件名称。获得所有 lib 文件名方法见附 1</li></ul></li><li>源文件—添加 main.cpp 测试文件，测试文件见附 2</li><li>使用 Release,x64 配置—生成—重新生成解决方案—调试—开始执行不调试</li></ol><p>附 1：获得 OCCT770\lib 下所有 lib 文件名的方法：(1)在 OCCT770\lib 文件夹新建一个 AAA.bat 文件；(2)使用记事本打开 AAA.bat 文件，添加 DIR <em>.lib</em> &#x2F;B &gt;LIST.TXT，保存；(3)双击运行 AAA.bat 文件，即可得到所有 lib 文件的文件名</p><p>附 2：main.cpp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;TopoDS_Shape.hxx&gt;</span></span><br><span class="line"><span class="comment">#include &lt;BRepPrimAPI_MakeBox.hxx&gt;</span></span><br><span class="line"><span class="comment">#include &lt;STEPControl_Writer.hxx&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="title function_ invoke__">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 创建盒子</span></span><br><span class="line">    BRepPrimAPI_MakeBox <span class="title function_ invoke__">boxMaker</span>(<span class="number">10.0</span>, <span class="number">20.0</span>, <span class="number">30.0</span>);</span><br><span class="line">    TopoDS_Shape boxShape = boxMaker.<span class="title function_ invoke__">Shape</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存为STEP文件</span></span><br><span class="line">    STEPControl_Writer writer;</span><br><span class="line">    writer.<span class="title function_ invoke__">Transfer</span>(boxShape, STEPControl_AsIs);</span><br><span class="line">    writer.<span class="title function_ invoke__">Write</span>(<span class="string">&quot;box_model.step&quot;</span>);</span><br><span class="line"></span><br><span class="line">    std::<span class="variable constant_">cout</span> &lt;&lt; <span class="string">&quot;盒子模型已保存为box_02.step&quot;</span> &lt;&lt; std::<span class="variable constant_">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置-AIS-可视化"><a href="#配置-AIS-可视化" class="headerlink" title="配置 AIS 可视化"></a>配置 AIS 可视化</h2><p>视频资料：<a href="https://www.youtube.com/watch?v=PXkv7fmURnI">https://www.youtube.com/watch?v=PXkv7fmURnI</a></p><p>视频配套文件：<a href="https://gitlab.com/ssv/lessons">https://gitlab.com/ssv/lessons</a></p><p>VTK: <a href="https://youtu.be/kZpr4ocnavA?feature=shared%E3%80%90%E6%B2%A1%E8%AF%95%E3%80%91">https://youtu.be/kZpr4ocnavA?feature=shared【没试】</a></p><p>首先按照上面一节介绍的配置好 OCCT 基础的环境，即可以正常建立模型，输入输出等，这里不再叙述。下面是配置 AIS 作为可视化的流程。</p><ol><li>VS—头文件—右键—添加—类，类名填写 Viewer</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2025/png/1488614/1736230253225-d98b6c79-4a66-4634-9b0d-e8d00fba7b0a.png"></p><ol start="2"><li>VS—头文件—右键—添加—类，类名填写 ViewerInteractor</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2025/png/1488614/1736230253220-86bf2afa-ba5e-4b4b-9d01-8e53acd61ca7.png"></p><ol><li>打开网站 <a href="https://gitlab.com/ssv/lessons/-/tree/master/Lesson04_HelloOpenCascade">https://gitlab.com/ssv/lessons/-/tree/master/Lesson04_HelloOpenCascade</a>，找到以下四个文件，分别复制其内容到我们新建的四个文件中。<a href="https://xdd1997.lanzoue.com/iOHGi2iqwgfa">蓝奏云备份</a></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Viewer.h</span><br><span class="line">Viewer.cpp</span><br><span class="line">ViewerInteractor.h</span><br><span class="line">ViewerInteractor.cpp</span><br></pre></td></tr></table></figure><ol><li>VS—源文件—右键—添加—新建项，创建 main.cpp</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;Viewer.h&quot;</span><br><span class="line">#include &lt;BRepPrimAPI_MakeBox.hxx&gt;</span><br><span class="line"></span><br><span class="line">int main(int argc, char** argv)</span><br><span class="line">&#123;</span><br><span class="line">    // Cteate ashape</span><br><span class="line">    BRepPrimAPI_MakeBox abox(10, 10, 20);</span><br><span class="line">    abox.Build();</span><br><span class="line">    const TopoDS_Shape&amp; ashape = abox.Shape();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // AIS Visualize</span><br><span class="line">    Viewer vout(50, 50, 500, 500);</span><br><span class="line">    vout &lt;&lt; ashape;</span><br><span class="line">    vout.StartMessageLoop();</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关于-W-键与-S-键不能使用"><a href="#关于-W-键与-S-键不能使用" class="headerlink" title="关于 W 键与 S 键不能使用"></a>关于 W 键与 S 键不能使用</h3><ol><li>打开文件 Viewer.cpp 文件，找到 StartMessageLoop()函数，注释掉下面语句</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_context-&gt;SetDisplayMode(shape, AIS_Shaded, true);</span><br></pre></td></tr></table></figure><ol><li>重新编译绘制形状后，可按 s 键显示阴影，按 w 键显示框线</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2025/png/1488614/1736230253283-c79439e2-27d8-4055-80e7-733a62de8fd9.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;官网下载：&lt;a href=&quot;https://dev.opencascade.org/release&quot;&gt;https://dev.opencas</summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="vs" scheme="https://19970622.xyz/tags/vs/"/>
    
    <category term="occt" scheme="https://19970622.xyz/tags/occt/"/>
    
  </entry>
  
  <entry>
    <title>使用vtk作为OCCT的图形显示</title>
    <link href="https://19970622.xyz/posts/140102/"/>
    <id>https://19970622.xyz/posts/140102/</id>
    <published>2025-01-06T16:00:00.000Z</published>
    <updated>2025-01-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ol><li>OpenCASCADE(OCC)_使用 VTK 显示(视频)：<a href="https://www.bilibili.com/video/BV1BL411Y7Ee">https://www.bilibili.com/video/BV1BL411Y7Ee</a></li><li>编译 vtk 与配置(视频)：<a href="https://www.youtube.com/watch?v=kZpr4ocnavA">https://www.youtube.com/watch?v=kZpr4ocnavA</a></li><li>编译 vtk(文本): <a href="https://mp.weixin.qq.com/s/RaQLRVKoAQKY2gf4lHmejw">https://mp.weixin.qq.com/s/RaQLRVKoAQKY2gf4lHmejw</a></li></ol><h2 id="编译-VTK"><a href="#编译-VTK" class="headerlink" title="编译 VTK"></a>编译 VTK</h2><ol><li>进入<a href="https://gitlab.kitware.com/vtk/vtk%EF%BC%8C%E4%B8%8B%E8%BD%BD9.2.0%E7%89%88%E6%9C%AC%E6%BA%90%E4%BB%A3%E7%A0%81%EF%BC%8C%E8%A7%A3%E5%8E%8B%EF%BC%8C%E5%BE%97%E5%88%B0%60vtk-v9.2.0%60%E2%80%8B%E6%96%87%E4%BB%B6%E5%A4%B9">https://gitlab.kitware.com/vtk/vtk，下载 9.2.0 版本源代码，解压，得到<code>vtk-v9.2.0</code>文件夹</a></li><li>进入<a href="https://cmake.org/download/%EF%BC%8C%E6%89%BE%E5%88%B0Windows">https://cmake.org/download/，找到 Windows</a> x64 Installer 进行下载，然后安装</li><li>打开 cmake, 源代码目录选择 vtk-v9.2.0 文件夹，再新建一个 vtk-v9.2.0-bulid 目录存放编译内容，点击 Configure，弹出一个框，选择 VS2019 和 x64，点击 Finish，开始编译</li><li>弹出一个框，新建 vtk-v9.2.0-install 目录配置给 cmake_install_prefix，然后依次点击 Configure—Generate—Open Project，进入 VS2019</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202412311937561.png"></p><ol start="4"><li>在解决方案中找到 INSTALL—右键—生成，时间较长需等待</li><li>编译完成后在 vtk-v9.2.0-install 文件夹下有 bin&#x2F;include&#x2F;lib 三个文件夹</li></ol><p>‍</p><p>‍</p><h2 id="编译-OCCT"><a href="#编译-OCCT" class="headerlink" title="编译 OCCT"></a>编译 OCCT</h2><ol><li>下载 occt 7.7.0 源码 <strong>opencascade-7.7.0.tgz</strong> ：<a href="https://dev.opencascade.org/release%EF%BC%8C%E8%A7%A3%E5%8E%8B%E5%BE%97%E5%88%B0%60opencascade-7.7.0%60%E2%80%8B%E6%96%87%E4%BB%B6%E5%A4%B9">https://dev.opencascade.org/release，解压得到<code>opencascade-7.7.0</code>文件夹</a></li><li>进入<a href="https://dev.opencascade.org/resources/download/3rd-party-components%EF%BC%8C">https://dev.opencascade.org/resources/download/3rd-party-components，</a><ul><li>下载 Freeimage, vc14, x64</li><li>下载 Freetype, vc14, x64</li><li>下载 tcltk,vc12, x64</li></ul></li><li>新建一个 OCCT-7.7.0 的文件夹，把 occt 的源码文件夹<code>opencascade-7.7.0</code>拷贝进去</li><li>在 OCCT-7.7.0 文件夹下面新建<code>opencascade-7.7.0-build</code>, <code>opencascade-7.7.0-install</code>和<code>products</code>三个文件夹，将解压后的 Freeimage，Freetype，tcltk 文件夹拷贝到<code>products</code>文件夹内</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">D:\OCCT-<span class="number">7.7</span>.<span class="number">0</span></span><br><span class="line">|____opencascade-<span class="number">7.7</span>.<span class="number">0</span></span><br><span class="line">|____opencascade-<span class="number">7.7</span>.<span class="number">0</span>-build</span><br><span class="line">|____opencascade-<span class="number">7.7</span>.<span class="number">0</span>-install</span><br><span class="line">|____products</span><br><span class="line">     |____freeimage-<span class="number">3.17</span>.<span class="number">0</span>-vc14-<span class="number">64</span></span><br><span class="line">     |____freetype-<span class="number">2.5</span>.<span class="number">5</span>-vc14-<span class="number">64</span></span><br><span class="line">     |____tcltk-<span class="number">86</span>-<span class="number">64</span></span><br></pre></td></tr></table></figure><ol start="5"><li>打开 cmake 软件，配置好 OCCT 源码目录与 build 目录，点击 Generate</li><li>出现一堆红色的内容，开始配置环境，按照之前放置的路径进行配置即可</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202412312121932.png"></p><ol start="7"><li>点击 Configure 会弹出错误，再配置 VTK 的目录，再点击 Configure</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202412312125474.png"></p><ol start="8"><li>弹出下面错误，解决方法是取消勾选 <code>BUILD_MODULE_Draw</code>，再点击 Configure</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">VTK <span class="title function_ invoke__">version</span> (<span class="number">9.2</span>.<span class="number">0</span>)</span><br><span class="line">CMake <span class="built_in">Error</span> at CMakeLists.txt:<span class="number">858</span> (message):</span><br><span class="line">  Could not find headers of used third-party products:</span><br><span class="line">  <span class="number">3</span>RDPARTY_TCL_INCLUDE_DIR <span class="number">3</span>RDPARTY_TK_INCLUDE_DIR</span><br></pre></td></tr></table></figure><ol start="9"><li>点击 Generate—Open Project，进入 VS2019</li><li>在解决方案右键—生成解决方案—耐心等待【注意要 debug 还是 release】</li><li>在解决方案中找到 INSTALL—右键—生成</li><li>编译完成后，在 opencascade-7.7.0-install 文件夹就会有 occt 的 inc, bind, libd 文件夹。d 是因为 debug 模式</li></ol><p>‍</p><p>‍</p><h2 id="在-OCCT-项目中使用-VTK"><a href="#在-OCCT-项目中使用-VTK" class="headerlink" title="在 OCCT 项目中使用 VTK"></a>在 OCCT 项目中使用 VTK</h2><ol><li>打开 VS2019，新建一个 c++项目</li><li>右键—属性，开始配置 occ 与 vtk<ul><li>改成 Dedug x64 平台</li><li>调试—环境—增加 occ 的 bin 目录,vtk 的 bin 目录和 freetype 的 bin 目录: PATH&#x3D;%PATH%;D:\OCCT-7.7.0\opencascade-7.7.0-install\win64\vc14\bind;D:\vtk-v9.2.0-install\bin;D:\OCCT-7.7.0\products\freetype-2.5.5-vc14-64\bin;</li><li><code>C/C++</code>—常规—附加包含目录—增加 occ, vtk 头文件目录:D:\OCCT-7.7.0\opencascade-7.7.0-install\inc;D:\vtk-v9.2.0-install\include\vtk-9.2;</li><li>链接器—常规—增加 occ, vtk 的 lib 所在目录:D:\OCCT-7.7.0\opencascade-7.7.0-install\win64\vc14\libd;D:\vtk-v9.2.0-install\lib;</li><li>链接器—输入—附加依赖项目，增加 occ, vtk 的 lib 文件名称</li></ul></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">DRAWEXE.lib</span><br><span class="line">ExpToCasExe.lib</span><br><span class="line">TKBin.lib</span><br><span class="line">TKBinL.lib</span><br><span class="line">TKBinTObj.lib</span><br><span class="line">TKBinXCAF.lib</span><br><span class="line">TKBO.lib</span><br><span class="line">TKBool.lib</span><br><span class="line">TKBRep.lib</span><br><span class="line">TKCAF.lib</span><br><span class="line">TKCDF.lib</span><br><span class="line">TKD3DHost.lib</span><br><span class="line">TKD3DHostTest.lib</span><br><span class="line">TKDCAF.lib</span><br><span class="line">TKDFBrowser.lib</span><br><span class="line">TKDraw.lib</span><br><span class="line">TKernel.lib</span><br><span class="line">TKExpress.lib</span><br><span class="line">TKFeat.lib</span><br><span class="line">TKFillet.lib</span><br><span class="line">TKG2d.lib</span><br><span class="line">TKG3d.lib</span><br><span class="line">TKGeomAlgo.lib</span><br><span class="line">TKGeomBase.lib</span><br><span class="line">TKHLR.lib</span><br><span class="line">TKIGES.lib</span><br><span class="line">TKIVtk.lib</span><br><span class="line">TKIVtkDraw.lib</span><br><span class="line">TKLCAF.lib</span><br><span class="line">TKMath.lib</span><br><span class="line">TKMesh.lib</span><br><span class="line">TKMeshVS.lib</span><br><span class="line">TKMessageModel.lib</span><br><span class="line">TKMessageView.lib</span><br><span class="line">TKOffset.lib</span><br><span class="line">TKOpenGl.lib</span><br><span class="line">TKOpenGles.lib</span><br><span class="line">TKOpenGlesTest.lib</span><br><span class="line">TKOpenGlTest.lib</span><br><span class="line">TKPrim.lib</span><br><span class="line">TKQADraw.lib</span><br><span class="line">TKRWMesh.lib</span><br><span class="line">TKService.lib</span><br><span class="line">TKShapeView.lib</span><br><span class="line">TKShHealing.lib</span><br><span class="line">TKStd.lib</span><br><span class="line">TKStdL.lib</span><br><span class="line">TKSTEP.lib</span><br><span class="line">TKSTEP209.lib</span><br><span class="line">TKSTEPAttr.lib</span><br><span class="line">TKSTEPBase.lib</span><br><span class="line">TKSTL.lib</span><br><span class="line">TKTInspector.lib</span><br><span class="line">TKTInspectorAPI.lib</span><br><span class="line">TKTObj.lib</span><br><span class="line">TKTObjDRAW.lib</span><br><span class="line">TKToolsDraw.lib</span><br><span class="line">TKTopAlgo.lib</span><br><span class="line">TKTopTest.lib</span><br><span class="line">TKTreeModel.lib</span><br><span class="line">TKV3d.lib</span><br><span class="line">TKVCAF.lib</span><br><span class="line">TKView.lib</span><br><span class="line">TKViewerTest.lib</span><br><span class="line">TKVInspector.lib</span><br><span class="line">TKVRML.lib</span><br><span class="line">TKXCAF.lib</span><br><span class="line">TKXDE.lib</span><br><span class="line">TKXDECascade.lib</span><br><span class="line">TKXDEDRAW.lib</span><br><span class="line">TKXDEIGES.lib</span><br><span class="line">TKXDESTEP.lib</span><br><span class="line">TKXMesh.lib</span><br><span class="line">TKXml.lib</span><br><span class="line">TKXmlL.lib</span><br><span class="line">TKXmlTObj.lib</span><br><span class="line">TKXmlXCAF.lib</span><br><span class="line">TKXSBase.lib</span><br><span class="line">TKXSDRAW.lib</span><br><span class="line"></span><br><span class="line">vtkInteractionStyle-<span class="number">9.2</span>d.lib</span><br><span class="line">vtkRenderingOpenGL2-<span class="number">9.2</span>d.lib</span><br><span class="line">vtkCommonCore-<span class="number">9.2</span>d.lib</span><br><span class="line">vtkRenderingCore-<span class="number">9.2</span>d.lib</span><br><span class="line">vtkCommonExecutionModel-<span class="number">9.2</span>d.lib</span><br><span class="line">vtksys-<span class="number">9.2</span>d.lib</span><br><span class="line">TKMath.lib</span><br><span class="line">TKV3d.lib</span><br><span class="line">TKIVtk.lib</span><br><span class="line">TKernel.lib</span><br><span class="line">TKTopAlgo.lib</span><br><span class="line">TKPrim.lib</span><br></pre></td></tr></table></figure><p>‍</p><ol start="3"><li>测试代码<code>main.cpp</code></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;BRepPrimAPI_MakeBox.hxx&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;IVtkTools_ShapeDataSource.hxx&gt;</span></span><br><span class="line"><span class="comment">#include &lt;vtkAutoInit.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;vtkRenderer.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;VtkRenderWindow.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;vtkRenderWindowInteractor.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;vtkInteractorStyleTrackballCamera.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;vtkPolyDataMapper.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">VTK_MODULE_INIT</span>(vtkRenderingOpenGL2)</span><br><span class="line"><span class="title function_ invoke__">VTK_MODULE_INIT</span>(vtkInteractionStyle)</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="title function_ invoke__">main</span>() &#123;</span><br><span class="line">    BRepPrimAPI_MakeBox <span class="title function_ invoke__">box</span>(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">TopoDS_Shape</span>&amp; ashape = box.<span class="title function_ invoke__">Shape</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//==============================================================================================</span></span><br><span class="line">    <span class="comment">// Source-&gt;mapper-&gt;actor-&gt;render</span></span><br><span class="line">    vtkNew&lt;IVtkTools_ShapeDataSource&gt; occSource;    <span class="comment">//创建一个可以被VTK使用的OCC数据源</span></span><br><span class="line">    occSource-&gt;<span class="title function_ invoke__">SetShape</span>(<span class="keyword">new</span> <span class="title class_">IVtkOCC_Shape</span>(ashape)); <span class="comment">//将ashape添加到数据源中</span></span><br><span class="line"></span><br><span class="line">    vtkNew&lt;vtkPolyDataMapper&gt; mapper;               <span class="comment">//创建一个VTK数据类型</span></span><br><span class="line">    mapper-&gt;<span class="title function_ invoke__">SetInputConnection</span>(occSource-&gt;<span class="title function_ invoke__">GetOutputPort</span>()); <span class="comment">//创建管道，将occ数据导入到VTK</span></span><br><span class="line"></span><br><span class="line">    vtkNew&lt;vtkActor&gt; actor;   <span class="comment">//创建 actor</span></span><br><span class="line">    actor-&gt;<span class="title function_ invoke__">SetMapper</span>(mapper); <span class="comment">//将vtk数据交给actor</span></span><br><span class="line"></span><br><span class="line">    vtkNew&lt;vtkRenderWindow&gt; renderWindow; <span class="comment">//创建窗口</span></span><br><span class="line">    vtkNew&lt;vtkRenderer&gt; render;           <span class="comment">//创建渲染器</span></span><br><span class="line">    renderWindow-&gt;<span class="title function_ invoke__">AddRenderer</span>(render);    <span class="comment">//在窗口中加入渲染器</span></span><br><span class="line">    render-&gt;<span class="title function_ invoke__">AddActor</span>(actor);              <span class="comment">//在渲染器中加入actor</span></span><br><span class="line">    render-&gt;<span class="title function_ invoke__">SetBackground</span>(<span class="number">0.302</span>, <span class="number">0.302</span>, <span class="number">0.302</span>);<span class="comment">//设置窗口背景颜色</span></span><br><span class="line"></span><br><span class="line">    vtkNew&lt;vtkRenderWindowInteractor&gt; iren;           <span class="comment">//创建一个vtk交互器</span></span><br><span class="line">    vtkNew&lt;vtkInteractorStyleTrackballCamera&gt; istyle; <span class="comment">//创建vtk相机交互器样式</span></span><br><span class="line">    iren-&gt;<span class="title function_ invoke__">SetRenderWindow</span>(renderWindow);              <span class="comment">//设置渲染窗口</span></span><br><span class="line">    iren-&gt;<span class="title function_ invoke__">SetInteractorStyle</span>(istyle);                 <span class="comment">//设置交互器样式</span></span><br><span class="line"></span><br><span class="line">    iren-&gt;<span class="title function_ invoke__">Initialize</span>(); <span class="comment">//初始化交互器</span></span><br><span class="line">    iren-&gt;<span class="title function_ invoke__">Start</span>();      <span class="comment">//开始运行交互器</span></span><br><span class="line">    <span class="comment">//==============================================================================================</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202412312210740.png"></p><p>‍</p><p>‍</p><h2 id="vtk-资料"><a href="#vtk-资料" class="headerlink" title="vtk 资料"></a>vtk 资料</h2><p>书籍</p><p>《<a href="https://vtk.org/vtk-users-guide/">VTK User&apos;s Guide</a>》搜 <code>VTK_Users_Guide_v11.pdf</code></p><p>《VTK 用户手册–中文翻译版》搜 <code>VTK用户手册--中文翻译版.pdf</code></p><p>《VTK 图形图像开发进阶》搜 <code>VTK图形图像开发进阶</code></p><p>《数据可视化技术》林勇 暂无 PDF</p><p>‍</p><p>‍</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;OpenCASCADE(OCC)_使用 VTK 显示(视频)：&lt;a href=&quot;https://www.bilibili.com</summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="vs" scheme="https://19970622.xyz/tags/vs/"/>
    
    <category term="vtk" scheme="https://19970622.xyz/tags/vtk/"/>
    
    <category term="occt" scheme="https://19970622.xyz/tags/occt/"/>
    
  </entry>
  
  <entry>
    <title>Patran/Nastran壳单元静力分析和模态分析</title>
    <link href="https://19970622.xyz/posts/232213/"/>
    <id>https://19970622.xyz/posts/232213/</id>
    <published>2024-11-23T16:00:00.000Z</published>
    <updated>2024-11-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立几何模型"><a href="#建立几何模型" class="headerlink" title="建立几何模型"></a>建立几何模型</h2><ol><li>打开 Patran—File—New—选个路径—设置文件名为 622.db</li><li>Geometry—Surfaces—右侧会出现窗口</li><li>依次设置 Action:<code>Create</code>,Object:<code>Surface</code>,Method:<code>XYZ</code></li><li>点击 Apply</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123204308.png"></p><h2 id="建立材料"><a href="#建立材料" class="headerlink" title="建立材料"></a>建立材料</h2><ol><li>Properties—Isotropic—右侧会出现窗口</li><li>依次设置 Action:<code>Create</code>,Object:<code>Isotropic</code>,Method:<code>Manual Input</code>,Material Name: <code>steel_xdd</code></li><li>点击 Input Properties，设置弹性模量为 210E9，泊松比 0.3，密度 7850，点击 ok</li><li>点击 apply</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123205105.png"></p><h2 id="建立单元属性"><a href="#建立单元属性" class="headerlink" title="建立单元属性"></a>建立单元属性</h2><ol><li>Properties—2D Properties—Shell—右侧会出现窗口</li><li>依次设置 Action:<code>Create</code>,Object:<code>2D</code>,Type:<code>Shell</code></li><li>设置 Property Set Name: <code>pshell_xdd</code></li><li>点击 Input Properties—点击 Mat Prop Name 后面的图标—选择已经定义的材料</li><li>设置 Thickness 值为 0.2，点击 ok</li><li>点击 Select Application Region—Select:Entities—选择左边界面的几何图形或者点击 Pick All—add—ok</li><li>点击 Apply</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123205009.png"></p><h2 id="划分网格"><a href="#划分网格" class="headerlink" title="划分网格"></a>划分网格</h2><ol><li>Meshing—Mesh Seeds—Uniform—右侧会出现窗口</li><li>依次设置 Action:<code>Create</code>,Object:<code>Mesh Seed</code>,Type:<code>Uniform</code></li><li>依次选择几何线，并设置单元个数或者单元大小，点击 Apply</li><li>依次设置 Action:<code>Create</code>,Object:<code>Mesh</code>,Type:<code>Surface</code></li><li>依次设置 Elem Shape:<code>Quad</code>,Mesher:<code>IsoMesh</code>,Toplogy:<code>Quad4</code></li><li>选择界面上的几何面，点击 Select Existing Prop，选择已经定义好的单元属性</li><li>点击 Apply</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123205744.png"></p><h2 id="设置工况-Load-Case"><a href="#设置工况-Load-Case" class="headerlink" title="设置工况 Load Case"></a>设置工况 Load Case</h2><h3 id="设置约束"><a href="#设置约束" class="headerlink" title="设置约束"></a>设置约束</h3><ol><li>Load&#x2F;BCS—Displacement Constraint—右侧会出现窗口</li><li>依次设置 Action:<code>Create</code>,Object:<code>Displacement</code>,Type:<code>Nodal</code></li><li>设置约束名称为 spc_xdd</li><li>点击 Input Data—选择约束的位移值，位移与转角均设置为<code>&lt;0 0 0 &gt;</code></li><li>点击 Select Application Region—Select:FEM—选择约束的节点—add—ok</li><li>点击 Apply, 约束设置完毕</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123210313.png"></p><h3 id="设置载荷"><a href="#设置载荷" class="headerlink" title="设置载荷"></a>设置载荷</h3><ol><li>Load&#x2F;BCS—Force—右侧会出现窗口</li><li>依次设置 Action:<code>Create</code>,Object:<code>Force</code>,Type:<code>Nodal</code></li><li>设置载荷名称为 force_xdd</li><li>点击 Input Data—选择集中力的大小，Force 为<code>&lt;0 0 100&gt;</code></li><li>点击 Select Application Region—Select:FEM—选择集中力作用的节点—add—ok</li><li>点击 Apply, 载荷设置完毕</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123210652.png"></p><h3 id="设置工况"><a href="#设置工况" class="headerlink" title="设置工况"></a>设置工况</h3><p>这一步可以不设置，系统会自动创建一个名为 Default 的工况，下面我们学习一下怎么设置与修改</p><ol><li>Load&#x2F;BCS—Create Load Case—右侧会出现窗口</li><li>可以看到，在 Existing Load Cases 已经有一个名为 Default 的工况</li><li>将 Action 设置为 Modify—点击下面的 Default—弹出一个窗口</li><li>左上角的是可选的载荷和约束，右上角是已经定义好的工况，最下面的当前工况希望含有的载荷与约束</li><li>点击 Remove All Rows 可以清空下面框框里面的载荷与约束，然后按照需求从左上角选择想添加到当前工况的载荷与约束</li><li>选择完毕后，点击 ok 退出设置</li><li>点击设置工况名称，点击 Apply 即可</li></ol><h2 id="设置求解选项"><a href="#设置求解选项" class="headerlink" title="设置求解选项"></a>设置求解选项</h2><h3 id="静力分析设置"><a href="#静力分析设置" class="headerlink" title="静力分析设置"></a>静力分析设置</h3><ol><li>Analysis—Analysis Desk—右侧会出现窗口</li><li>依次设置 Action:<code>Analyze</code>,Object:<code>Entire Model</code>,Method:<code>Analysis Desk</code></li><li>设置 Job Name: 622</li><li>点击 Solution Type: <code>LINEAR STATIC</code>—点击 ok</li><li>点击 Subcase Select 挑选工况，默认是选择名为 Default 的工况</li><li>点击 Subcases —点击 Output Requests—把位移应力应变添加进去—点击 ok—点击 Apply—点击 Cancel 退出此界面</li><li>点击 Apply 开始生成 bdf 文件</li><li>打开 Nastran 求解<code>622.bdf</code>文件</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123211304.png"></p><h3 id="静力分析结果"><a href="#静力分析结果" class="headerlink" title="静力分析结果"></a>静力分析结果</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/1488614/1732364561441-b1ad3218-ebb4-4b82-ae79-436fb066e93f.png"></p><h3 id="静力分析-BDF-文件"><a href="#静力分析-BDF-文件" class="headerlink" title="静力分析 BDF 文件"></a>静力分析 BDF 文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">SOL 101</span><br><span class="line">CEND</span><br><span class="line">TITLE = MSC.Nastran job created on 23-Nov-24 at 21:07:43</span><br><span class="line">ECHO = NONE</span><br><span class="line">SUBCASE 1</span><br><span class="line">   SUBTITLE=Default</span><br><span class="line">   SPC = 2</span><br><span class="line">   LOAD = 2</span><br><span class="line">   DISPLACEMENT(SORT1,REAL)=ALL</span><br><span class="line">   STRAIN(SORT1,REAL,VONMISES,STRCUR,BILIN)=ALL</span><br><span class="line">   STRESS(SORT1,REAL,VONMISES,BILIN)=ALL</span><br><span class="line"></span><br><span class="line">BEGIN BULK</span><br><span class="line">PARAM    POST    0</span><br><span class="line">PARAM   PRTMAXIM YES</span><br><span class="line">CQUAD4   1       1       1       2       5       4</span><br><span class="line">CQUAD4   2       1       2       3       6       5</span><br><span class="line">CQUAD4   3       1       1       4       8       7</span><br><span class="line">CQUAD4   4       1       4       5       9       8</span><br><span class="line">CQUAD4   5       1       5       6       10      9</span><br><span class="line">CQUAD4   6       1       7       8       12      11</span><br><span class="line">CQUAD4   7       1       8       9       13      12</span><br><span class="line">CQUAD4   8       1       9       10      14      13</span><br><span class="line">GRID*    1                              .809319019317627.467628985643387</span><br><span class="line">*        0.</span><br><span class="line">GRID*    2                              1.30931901931763.467628985643387</span><br><span class="line">*        0.</span><br><span class="line">GRID*    3                              1.80931901931763.467628985643387</span><br><span class="line">*        0.</span><br><span class="line">GRID*    4                              1.12353098392487.781840980052948</span><br><span class="line">*        0.</span><br><span class="line">GRID*    5                              1.42647039890289.793113708496094</span><br><span class="line">*        0.</span><br><span class="line">GRID*    6                              1.80931901931763.800962328910828</span><br><span class="line">*        0.</span><br><span class="line">GRID*    7                              .809319019317627.967628955841065</span><br><span class="line">*        0.</span><br><span class="line">GRID*    8                              1.134803771972661.08478021621704</span><br><span class="line">*        0.</span><br><span class="line">GRID*    9                              1.462530970573431.12084078788757</span><br><span class="line">*        0.</span><br><span class="line">GRID*    10                             1.809319019317631.1342955827713</span><br><span class="line">*        0.</span><br><span class="line">GRID*    11                             .8093190193176271.46762895584107</span><br><span class="line">*        0.</span><br><span class="line">GRID*    12                             1.142652392387391.46762895584107</span><br><span class="line">*        0.</span><br><span class="line">GRID*    13                             1.475985646247861.46762895584107</span><br><span class="line">*        0.</span><br><span class="line">GRID*    14                             1.809319019317631.46762895584107</span><br><span class="line">*        0.</span><br><span class="line">MAT1     1      2.1+11          .3      7850.</span><br><span class="line">PSHELL   1       1      .2       1               1</span><br><span class="line">SPCADD   2       1</span><br><span class="line">LOAD     2      1.      1.       1</span><br><span class="line">SPC1     1       123456  1       7       11</span><br><span class="line">FORCE    1       10      0      100.     0.      0.     1.</span><br><span class="line">ENDDATA</span><br></pre></td></tr></table></figure><h3 id="模态分析设置"><a href="#模态分析设置" class="headerlink" title="模态分析设置"></a>模态分析设置</h3><ol><li>Analysis—Analysis Desk—右侧会出现窗口</li><li>依次设置 Action:<code>Analyze</code>,Object:<code>Entire Model</code>,Method:<code>Analysis Desk</code></li><li>设置 Job Name: 518</li><li>点击 Solution Type: <code>NORMAL MODES</code>—点击 ok</li><li>点击 Subcase Select 挑选工况，默认是选择名为 Default 的工况</li><li>点击 Subcases Parameters—设置 Number of Desired Roots:<code>20</code>(希望求 20 阶特征值)—点击 ok—点击 Apply—点击 Cancel 退出此界面</li><li>点击 Apply 开始生成 bdf 文件</li><li>打开 Nastran 求解<code>518.bdf</code>文件即可</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123212156.png"></p><h3 id="模态分析结果"><a href="#模态分析结果" class="headerlink" title="模态分析结果"></a>模态分析结果</h3><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241123215600.png"></p><h3 id="模态分析-BDF-文件"><a href="#模态分析-BDF-文件" class="headerlink" title="模态分析 BDF 文件"></a>模态分析 BDF 文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">SOL 103</span><br><span class="line">CEND</span><br><span class="line">ECHO = NONE</span><br><span class="line">SUBCASE 1</span><br><span class="line">   SUBTITLE=Default</span><br><span class="line">   METHOD = 1</span><br><span class="line">   SPC = 2</span><br><span class="line">   VECTOR(SORT1,REAL)=ALL</span><br><span class="line">   SPCFORCES(SORT1,REAL)=ALL</span><br><span class="line"></span><br><span class="line">BEGIN BULK</span><br><span class="line">PARAM    POST    0</span><br><span class="line">PARAM   PRTMAXIM YES</span><br><span class="line">CQUAD4   1       1       1       2       5       4</span><br><span class="line">CQUAD4   2       1       2       3       6       5</span><br><span class="line">CQUAD4   3       1       1       4       8       7</span><br><span class="line">CQUAD4   4       1       4       5       9       8</span><br><span class="line">CQUAD4   5       1       5       6       10      9</span><br><span class="line">CQUAD4   6       1       7       8       12      11</span><br><span class="line">CQUAD4   7       1       8       9       13      12</span><br><span class="line">CQUAD4   8       1       9       10      14      13</span><br><span class="line">GRID*    1                              .809319019317627.467628985643387</span><br><span class="line">*        0.</span><br><span class="line">GRID*    2                              1.30931901931763.467628985643387</span><br><span class="line">*        0.</span><br><span class="line">GRID*    3                              1.80931901931763.467628985643387</span><br><span class="line">*        0.</span><br><span class="line">GRID*    4                              1.12353098392487.781840980052948</span><br><span class="line">*        0.</span><br><span class="line">GRID*    5                              1.42647039890289.793113708496094</span><br><span class="line">*        0.</span><br><span class="line">GRID*    6                              1.80931901931763.800962328910828</span><br><span class="line">*        0.</span><br><span class="line">GRID*    7                              .809319019317627.967628955841065</span><br><span class="line">*        0.</span><br><span class="line">GRID*    8                              1.134803771972661.08478021621704</span><br><span class="line">*        0.</span><br><span class="line">GRID*    9                              1.462530970573431.12084078788757</span><br><span class="line">*        0.</span><br><span class="line">GRID*    10                             1.809319019317631.1342955827713</span><br><span class="line">*        0.</span><br><span class="line">GRID*    11                             .8093190193176271.46762895584107</span><br><span class="line">*        0.</span><br><span class="line">GRID*    12                             1.142652392387391.46762895584107</span><br><span class="line">*        0.</span><br><span class="line">GRID*    13                             1.475985646247861.46762895584107</span><br><span class="line">*        0.</span><br><span class="line">GRID*    14                             1.809319019317631.46762895584107</span><br><span class="line">*        0.</span><br><span class="line">EIGRL    1                       20      0                       MASS</span><br><span class="line">PSHELL   1       1      .2       1               1</span><br><span class="line">MAT1     1      2.1+11          .3      7850.</span><br><span class="line">SPCADD   2       1</span><br><span class="line">SPC1     1       123456  1       7       11</span><br><span class="line">ENDDATA</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;建立几何模型&quot;&gt;&lt;a href=&quot;#建立几何模型&quot; class=&quot;headerlink&quot; title=&quot;建立几何模型&quot;&gt;&lt;/a&gt;建立几何模型&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;打开 Patran—File—New—选个路径—设置文件名为 622.db&lt;/li&gt;
&lt;li&gt;G</summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="nastran" scheme="https://19970622.xyz/tags/nastran/"/>
    
    <category term="patran" scheme="https://19970622.xyz/tags/patran/"/>
    
  </entry>
  
  <entry>
    <title>Python虚拟环境</title>
    <link href="https://19970622.xyz/posts/104034/"/>
    <id>https://19970622.xyz/posts/104034/</id>
    <published>2024-11-02T16:00:00.000Z</published>
    <updated>2025-02-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ol><li>新建一个项目文件夹 AA，打开 cmd，导航到 AA 文件夹。如果是下载的项目，一般要导航到文件<code>requirements.txt</code>所在的项目根目录</li><li>使用 venv 创建虚拟环境</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv env</span><br></pre></td></tr></table></figure><ol start="3"><li>激活创建的虚拟环境，激活成功后黑窗是这样显示的 <code>(env) D:\Desktop\AA&gt;</code></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env\Scripts\activate.bat</span><br></pre></td></tr></table></figure><ol start="4"><li>查看当前环境已经安装的包，或者安装新包</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="built_in">list</span></span><br><span class="line">pip install</span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><ol start="6"><li>使用虚拟环境运行 Python 脚本</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python xdd.py</span><br></pre></td></tr></table></figure><h2 id="其它知识"><a href="#其它知识" class="headerlink" title="其它知识"></a>其它知识</h2><h3 id="列出项目依赖的库"><a href="#列出项目依赖的库" class="headerlink" title="列出项目依赖的库"></a>列出项目依赖的库</h3><h4 id="方案-1-freeze"><a href="#方案-1-freeze" class="headerlink" title="方案 1 freeze"></a>方案 1 freeze</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进入虚拟环境</span><br><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><h4 id="方案-2-pipreqs"><a href="#方案-2-pipreqs" class="headerlink" title="方案 2 pipreqs"></a>方案 2 pipreqs</h4><p><strong>这个方法不用进入虚拟环境</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install pipreqs</span><br><span class="line">cd 项目根目录</span><br><span class="line">pipreqs . --<span class="built_in">print</span> --force --encoding=utf8</span><br><span class="line">pipreqs . --encoding=utf8</span><br></pre></td></tr></table></figure><ol><li><code>**&lt;font style=&quot;color:rgb(0, 0, 0);&quot;&gt;.&lt;/font&gt;**</code><font style="color:rgb(0, 0, 0);"><br></font><font style="color:rgb(0, 0, 0);">表示扫描</font><strong><font style="color:rgb(0, 0, 0);">当前目录</font></strong><font style="color:rgb(0, 0, 0);">下的所有 Python 文件（</font><code>&lt;font style=&quot;color:rgb(0, 0, 0);&quot;&gt;.py&lt;/font&gt;</code><font style="color:rgb(0, 0, 0);">），分析代码中导入的第三方库。</font></li><li><code>**&lt;font style=&quot;color:rgb(0, 0, 0);&quot;&gt;--print&lt;/font&gt;**</code><font style="color:rgb(0, 0, 0);"><br></font><font style="color:rgb(0, 0, 0);">将生成的依赖列表</font><strong><font style="color:rgb(0, 0, 0);">直接输出到终端</font></strong><font style="color:rgb(0, 0, 0);">，而不是写入 </font><code>&lt;font style=&quot;color:rgb(0, 0, 0);&quot;&gt;requirements.txt&lt;/font&gt;</code><font style="color:rgb(0, 0, 0);"> 文件。适合预览或调试依赖关系。</font></li><li><code>**&lt;font style=&quot;color:rgb(0, 0, 0);&quot;&gt;--force&lt;/font&gt;**</code><font style="color:rgb(0, 0, 0);"><br></font><font style="color:rgb(0, 0, 0);">强制重新生成依赖列表。如果之前运行过 </font><code>&lt;font style=&quot;color:rgb(0, 0, 0);&quot;&gt;pipreqs&lt;/font&gt;</code><font style="color:rgb(0, 0, 0);"> 并生成了 </font><code>&lt;font style=&quot;color:rgb(0, 0, 0);&quot;&gt;requirements.txt&lt;/font&gt;</code><font style="color:rgb(0, 0, 0);">，此参数会</font><strong><font style="color:rgb(0, 0, 0);">忽略已有文件</font></strong><font style="color:rgb(0, 0, 0);">，重新扫描所有代码（即使无实际变化）。</font></li><li><code>**&lt;font style=&quot;color:rgb(0, 0, 0);&quot;&gt;--encoding=utf8&lt;/font&gt;**</code><font style="color:rgb(0, 0, 0);"><br></font><font style="color:rgb(0, 0, 0);">指定以 </font><strong><font style="color:rgb(0, 0, 0);">UTF-8 编码</font></strong><font style="color:rgb(0, 0, 0);">读取项目中的 Python 文件，避免因文件内容包含非 ASCII 字符（如中文注释）导致解析错误</font></li></ol><h3 id="检测使用的解释器环境"><a href="#检测使用的解释器环境" class="headerlink" title="检测使用的解释器环境"></a>检测使用的解释器环境</h3><p>使用 python 运行下面的 py 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xdd.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="built_in">print</span>(sys.path)</span><br></pre></td></tr></table></figure><h3 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title="退出虚拟环境"></a>退出虚拟环境</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><h3 id="删除虚拟环境，也就是删除文件夹"><a href="#删除虚拟环境，也就是删除文件夹" class="headerlink" title="删除虚拟环境，也就是删除文件夹"></a>删除虚拟环境，也就是删除文件夹</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmdir /s myenv</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;新建一个项目文件夹 AA，打开 cmd，导航到 AA 文件夹。如果是下载的项目，一般要导航到文件&lt;code&gt;re</summary>
      
    
    
    
    <category term="python" scheme="https://19970622.xyz/categories/python/"/>
    
    
    <category term="python" scheme="https://19970622.xyz/tags/python/"/>
    
    <category term="虚拟环境" scheme="https://19970622.xyz/tags/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>证件照开源项目HivisionIDPhotos</title>
    <link href="https://19970622.xyz/posts/160000/"/>
    <id>https://19970622.xyz/posts/160000/</id>
    <published>2024-11-01T16:00:00.000Z</published>
    <updated>2024-11-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>代码仓库：<a href="https://github.com/Zeyi-Lin/HivisionIDPhotos">https://github.com/Zeyi-Lin/HivisionIDPhotos</a></p><p>SwanHub 相关模型：<a href="https://swanhub.co/ZeYiLin/HivisionIDPhotos_models/tree/main">https://swanhub.co/ZeYiLin/HivisionIDPhotos_models&#x2F;tree&#x2F;main</a></p><h2 id="配置教程"><a href="#配置教程" class="headerlink" title="配置教程"></a>配置教程</h2><ol><li>随便找到一个文件夹，执行下面代码，或直接将 Github 仓库代码下载解压</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Zeyi-Lin/HivisionIDPhotos.git</span><br></pre></td></tr></table></figure><ol start="2"><li>通过 cmd 进入文件夹，下载 Python 依赖文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">win+r ---&gt; cmd</span><br><span class="line">cd  HivisionIDPhotos</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line">pip install -r requirements-app.txt</span><br></pre></td></tr></table></figure><ol start="3"><li>前往<a href="https://swanhub.co/ZeYiLin/HivisionIDPhotos_models/tree/main">SwanHub</a>下载 5 个模型，下载后其中四个模型存到项目的<code>hivision/creator/weights</code>目录下</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202411091346756.png"></p><ol start="4"><li>模型<code>retinaface-resnet50.onnx</code>，放在文件夹 hivision\creator\retinaface\weights</li><li>在 cmd 中执行<code>python app.py</code>，得到一个网址，在浏览器打开即可</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2024/png/1488614/1730815444222-cc8e394f-af65-4cf9-98f2-8ce1002b1abe.png"></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li>人脸检测模型：retinaface-resnet50</li><li>抠图模型：一般使用 birefnet-v1-lite，如果只换底色<strong>要</strong>使用 hivision_modnet</li><li>更多使用方法参考：<a href="https://github.com/Zeyi-Lin/HivisionIDPhotos">https://github.com/Zeyi-Lin/HivisionIDPhotos</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;代码仓库：&lt;a href=&quot;https://github.com/Zeyi-Lin/HivisionIDPhotos&quot;&gt;https://gi</summary>
      
    
    
    
    <category term="未分类" scheme="https://19970622.xyz/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="证件照" scheme="https://19970622.xyz/tags/%E8%AF%81%E4%BB%B6%E7%85%A7/"/>
    
    <category term="抠图" scheme="https://19970622.xyz/tags/%E6%8A%A0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>markdown转微信公众号项目-md</title>
    <link href="https://19970622.xyz/posts/160127/"/>
    <id>https://19970622.xyz/posts/160127/</id>
    <published>2024-10-31T16:00:00.000Z</published>
    <updated>2024-10-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ol><li>项目仓库：<a href="https://github.com/doocs/md">https://github.com/doocs/md</a></li><li>在线使用：<a href="https://doocs.github.io/md/">https://doocs.github.io/md/</a></li></ol><h2 id="本地搭建流程"><a href="#本地搭建流程" class="headerlink" title="本地搭建流程"></a>本地搭建流程</h2><ol><li>下载 Github 上的该仓库代码，得到一个压缩包<code>md-main.zip</code></li><li>解压压缩包，得到下面这样的文件夹层次</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202411011527844.png"></p><ol start="3"><li>运行<code>win+r</code>,进入<code>md-main</code>文件夹</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">win+r</span><br><span class="line">cd /d D:\md-main</span><br></pre></td></tr></table></figure><ol start="4"><li>在本地部署项目</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br><span class="line">npm start</span><br><span class="line">在浏览器打开相应的网址即可</span><br></pre></td></tr></table></figure><h2 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;项目仓库：&lt;a href=&quot;https://github.com/doocs/md&quot;&gt;https://github.com/do</summary>
      
    
    
    
    <category term="未分类" scheme="https://19970622.xyz/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="markdown" scheme="https://19970622.xyz/tags/markdown/"/>
    
    <category term="微信公众号" scheme="https://19970622.xyz/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo|Butterfly|修改字体</title>
    <link href="https://19970622.xyz/posts/10212010/"/>
    <id>https://19970622.xyz/posts/10212010/</id>
    <published>2024-10-20T16:00:00.000Z</published>
    <updated>2024-10-20T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202410212004008.png"></p><h2 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h2><ol><li>下载一个 ttf 字体，放在<code>themes/butterfly/source/font/YaHei_Consolas_Hybrid.ttf</code></li><li>在<code>themes/butterfly/source/css/</code>下创建<code>font.css</code>文件，内容如下：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">  font-family: &#x27;YaHei_Consolas_Hybrid&#x27;;</span><br><span class="line">  font-display: swap;</span><br><span class="line">  src: url(&#x27;/fonts/YaHei_Consolas_Hybrid.ttf&#x27;) format(&#x27;truetype&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>修改<code>_config.butterfly.yml</code>文件，代码如下：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/font.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">font:</span><br><span class="line">  global-font-size:</span><br><span class="line">  code-font-size:</span><br><span class="line">  font-family: &#x27;YaHei_Consolas_Hybrid&#x27;</span><br><span class="line">  code-font-family: &#x27;YaHei_Consolas_Hybrid&#x27;</span><br></pre></td></tr></table></figure><ol start="4"><li>大功告成</li></ol><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><ol><li>建议只修改代码字体，因为默认的代码字体不是等宽字体</li><li>css 文件中的<code>font-family</code>后面的参数可以随意，正确引用即可</li><li>css 文件中可以定义多种字体</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;预览&quot;&gt;&lt;a href=&quot;#预览&quot; class=&quot;headerlink&quot; title=&quot;预览&quot;&gt;&lt;/a&gt;预览&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/20241021</summary>
      
    
    
    
    <category term="hexo" scheme="https://19970622.xyz/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://19970622.xyz/tags/hexo/"/>
    
    <category term="字体" scheme="https://19970622.xyz/tags/%E5%AD%97%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>Tecplot数据格式</title>
    <link href="https://19970622.xyz/posts/10181029/"/>
    <id>https://19970622.xyz/posts/10181029/</id>
    <published>2024-10-17T16:00:00.000Z</published>
    <updated>2024-10-17T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tecplot-帮助手册"><a href="#Tecplot-帮助手册" class="headerlink" title="Tecplot 帮助手册"></a>Tecplot 帮助手册</h2><ol><li>打开 tec360.exe—Help—Data Format Guide</li><li>或者直接搜索并打开文件：360_data_format_guide.pdf</li><li>主要有两种格式顺序格式&#x2F;非顺序格式，有限元数据要使用<code>非顺序格式</code>，除非模型比较规则才可以使用<code>顺序格式</code></li></ol><h2 id="Tecplot-各种单元数据格式"><a href="#Tecplot-各种单元数据格式" class="headerlink" title="Tecplot 各种单元数据格式"></a>Tecplot 各种单元数据格式</h2><h3 id="六面体单元"><a href="#六面体单元" class="headerlink" title="六面体单元"></a>六面体单元</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">variables = <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>,<span class="string">&quot;disp&quot;</span></span><br><span class="line">zone T=XDD1, nodes=<span class="number">8</span>, elements=<span class="number">1</span>, et=brick, f=fepoint</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面对应variables的数值</span></span><br><span class="line">-<span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.1</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.2</span></span><br><span class="line"> <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.3</span></span><br><span class="line">-<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.4</span></span><br><span class="line">-<span class="number">1</span>, -<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.5</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.6</span></span><br><span class="line"> <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.7</span></span><br><span class="line">-<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面是单元连接关系</span></span><br><span class="line"><span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span></span><br></pre></td></tr></table></figure><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202410181011770.png"></p><h3 id="四面体单元"><a href="#四面体单元" class="headerlink" title="四面体单元"></a>四面体单元</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">variables = <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>,<span class="string">&quot;disp&quot;</span></span><br><span class="line">zone T=XDD2, nodes=<span class="number">4</span>, elements=<span class="number">1</span>, et=tetrahedron, f=fepoint</span><br><span class="line">-<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1.1</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1.2</span></span><br><span class="line"> <span class="number">1</span>,  <span class="number">1</span>, <span class="number">0</span>, <span class="number">1.3</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>, <span class="number">1</span>, <span class="number">1.8</span></span><br><span class="line"><span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="四边形单元"><a href="#四边形单元" class="headerlink" title="四边形单元"></a>四边形单元</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">variables = <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>,<span class="string">&quot;disp&quot;</span></span><br><span class="line">zone T=XDD3, nodes=<span class="number">4</span>, elements=<span class="number">1</span>, et=quadrilateral, f=fepoint</span><br><span class="line">-<span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.1</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.2</span></span><br><span class="line"> <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.3</span></span><br><span class="line">-<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.4</span></span><br><span class="line"><span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="三角形单元"><a href="#三角形单元" class="headerlink" title="三角形单元"></a>三角形单元</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">variables = <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>,<span class="string">&quot;disp&quot;</span></span><br><span class="line">zone T=XDD4, nodes=<span class="number">3</span>, elements=<span class="number">1</span>, et=triangle, f=fepoint</span><br><span class="line">-<span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>, <span class="number">1.1</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>, <span class="number">1.2</span></span><br><span class="line"> <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">0</span>, <span class="number">1.3</span></span><br><span class="line"><span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="同时输出多种类型的单元"><a href="#同时输出多种类型的单元" class="headerlink" title="同时输出多种类型的单元"></a>同时输出多种类型的单元</h3><p>如果是只有三角形与四边形，把三角形最后一个结点重复两次即可</p><p>如果是只有四面体与六面体，把四面体最后一个结点重复四次即可</p><p>同时含有 2D 与 3D 单元，将 2D 单元按照 3D 单元来写，想想怎么重复结点即可</p><p>如果只要网格，也可以重复上面的文件，比如下面这个同时输出六面体与三角形</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">variables = <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>,<span class="string">&quot;disp&quot;</span></span><br><span class="line">zone T=XDD1, nodes=<span class="number">8</span>, elements=<span class="number">1</span>, et=brick, f=fepoint</span><br><span class="line"></span><br><span class="line">-<span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.1</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.2</span></span><br><span class="line"> <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.3</span></span><br><span class="line">-<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">0</span>,  <span class="number">1.4</span></span><br><span class="line">-<span class="number">1</span>, -<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.5</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.6</span></span><br><span class="line"> <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.7</span></span><br><span class="line">-<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">variables = <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>,<span class="string">&quot;disp&quot;</span></span><br><span class="line">zone T=XDD4, nodes=<span class="number">3</span>, elements=<span class="number">1</span>, et=triangle, f=fepoint</span><br><span class="line">-<span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>, <span class="number">1.1</span></span><br><span class="line"> <span class="number">1</span>, -<span class="number">1</span>,  <span class="number">0</span>, <span class="number">1.2</span></span><br><span class="line"> <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">0</span>, <span class="number">1.3</span></span><br><span class="line"><span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="附录：Matlab-绘制六面体单元"><a href="#附录：Matlab-绘制六面体单元" class="headerlink" title="附录：Matlab 绘制六面体单元"></a>附录：Matlab 绘制六面体单元</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">p = [   -<span class="number">1</span> -<span class="number">1</span> <span class="number">0</span></span><br><span class="line"> <span class="number">1</span> -<span class="number">1</span> <span class="number">0</span></span><br><span class="line"> <span class="number">1</span>  <span class="number">1</span> <span class="number">0</span></span><br><span class="line">-<span class="number">1</span>  <span class="number">1</span> <span class="number">0</span></span><br><span class="line">-<span class="number">1</span> -<span class="number">1</span> <span class="number">1</span></span><br><span class="line"> <span class="number">1</span> -<span class="number">1</span> <span class="number">1</span></span><br><span class="line"> <span class="number">1</span>  <span class="number">1</span> <span class="number">1</span></span><br><span class="line">-<span class="number">1</span>  <span class="number">1</span> <span class="number">1</span>  ];</span><br><span class="line"></span><br><span class="line">t = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span>];</span><br><span class="line"></span><br><span class="line">col = rand(<span class="number">8</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">close <span class="built_in">all</span>;figure;axis equal;hold on;view(<span class="number">45</span>,<span class="number">10</span>)</span><br><span class="line">patch(<span class="string">&#x27;Vertices&#x27;</span>,p,<span class="string">&#x27;Faces&#x27;</span>,t(:,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]),<span class="string">&#x27;FaceVertexCData&#x27;</span>,col,<span class="string">&#x27;FaceColor&#x27;</span>,<span class="string">&#x27;interp&#x27;</span>);</span><br><span class="line">patch(<span class="string">&#x27;Vertices&#x27;</span>,p,<span class="string">&#x27;Faces&#x27;</span>,t(:,[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]),<span class="string">&#x27;FaceVertexCData&#x27;</span>,col,<span class="string">&#x27;FaceColor&#x27;</span>,<span class="string">&#x27;interp&#x27;</span>);</span><br><span class="line">patch(<span class="string">&#x27;Vertices&#x27;</span>,p,<span class="string">&#x27;Faces&#x27;</span>,t(:,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>]),<span class="string">&#x27;FaceVertexCData&#x27;</span>,col,<span class="string">&#x27;FaceColor&#x27;</span>,<span class="string">&#x27;interp&#x27;</span>);</span><br><span class="line">patch(<span class="string">&#x27;Vertices&#x27;</span>,p,<span class="string">&#x27;Faces&#x27;</span>,t(:,[<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">6</span>]),<span class="string">&#x27;FaceVertexCData&#x27;</span>,col,<span class="string">&#x27;FaceColor&#x27;</span>,<span class="string">&#x27;interp&#x27;</span>);</span><br><span class="line">patch(<span class="string">&#x27;Vertices&#x27;</span>,p,<span class="string">&#x27;Faces&#x27;</span>,t(:,[<span class="number">3</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">7</span>]),<span class="string">&#x27;FaceVertexCData&#x27;</span>,col,<span class="string">&#x27;FaceColor&#x27;</span>,<span class="string">&#x27;interp&#x27;</span>);</span><br><span class="line">patch(<span class="string">&#x27;Vertices&#x27;</span>,p,<span class="string">&#x27;Faces&#x27;</span>,t(:,[<span class="number">4</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">8</span>]),<span class="string">&#x27;FaceVertexCData&#x27;</span>,col,<span class="string">&#x27;FaceColor&#x27;</span>,<span class="string">&#x27;interp&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202410181012151.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Tecplot-帮助手册&quot;&gt;&lt;a href=&quot;#Tecplot-帮助手册&quot; class=&quot;headerlink&quot; title=&quot;Tecplot 帮助手册&quot;&gt;&lt;/a&gt;Tecplot 帮助手册&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;打开 tec360.exe—Help—Data </summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="tecplot" scheme="https://19970622.xyz/tags/tecplot/"/>
    
    <category term="云图" scheme="https://19970622.xyz/tags/%E4%BA%91%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>FreeCAD界面及Python操作入门知识</title>
    <link href="https://19970622.xyz/posts/191922/"/>
    <id>https://19970622.xyz/posts/191922/</id>
    <published>2024-09-11T16:00:00.000Z</published>
    <updated>2024-09-11T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>官网：<a href="https://www.freecad.org/">https://www.freecad.org/</a></p><p>Github 仓库：<a href="https://github.com/FreeCAD/FreeCAD">https://github.com/FreeCAD/FreeCAD</a></p><p>中文文档：<a href="https://wiki.freecad.org/Online_Help_Toc/zh-cn">https://wiki.freecad.org/Online_Help_Toc&#x2F;zh-cn</a></p><p>FreeCAD 社区: <a href="https://forum.freecad.org/index.php?style=5">https://forum.freecad.org/index.php?style=5</a></p><p><font style="color:rgb(0, 0, 0);">Command Reference</font>: <a href="https://wiki.freecad.org/Category:Command_Reference/zh-cn">https://wiki.freecad.org/Category:Command_Reference&#x2F;zh-cn</a></p><p><font style="color:rgba(0, 0, 0, 0.9);">FreeCAD|API 及其用法</font>：<a href="https://mp.weixin.qq.com/s/6yTHeZdN3dIZEHwHGpu8xg">https://mp.weixin.qq.com/s/6yTHeZdN3dIZEHwHGpu8xg</a></p><h2 id="鼠标键盘操作"><a href="#鼠标键盘操作" class="headerlink" title="鼠标键盘操作"></a>鼠标键盘操作</h2><p>缩放：滚轮，向下是缩小</p><p>移动：Ctrl+右键</p><p>旋转：Shift+右键</p><h2 id="GUI-操作"><a href="#GUI-操作" class="headerlink" title="GUI 操作"></a>GUI 操作</h2><h3 id="中文界面"><a href="#中文界面" class="headerlink" title="中文界面"></a>中文界面</h3><p>Edit—Preferences—General—Language—简体中文</p><h3 id="建立几何-Part"><a href="#建立几何-Part" class="headerlink" title="建立几何-Part"></a>建立几何-Part<img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409131649877.png"></h3><ol><li>工作台切换到 Part</li><li>零件—创建图元—可以创建：平面，立方体，圆柱体，圆锥体，球体，椭圆体，圆环体，棱柱，楔形，螺旋体，螺旋，圆，椭圆，点，线，正多边形</li><li>零件—拉伸</li></ol><h3 id="建立草图-Sketcher"><a href="#建立草图-Sketcher" class="headerlink" title="建立草图-Sketcher"></a>建立草图-Sketcher</h3><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409131652577.png"></p><ol><li>工作台切换到 Sketcher</li><li>Sketcher—创建草图</li><li>建立各种线，修剪</li><li>建立约束。共点，点在线上，水平，垂直，平行，设置线的水平长度等</li><li>退出草图工作台，可以再切换到 Part 工作台进行拉伸</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409131638908.png"></p><h2 id="Python-操作-FreeCAD"><a href="#Python-操作-FreeCAD" class="headerlink" title="Python 操作 FreeCAD"></a>Python 操作 FreeCAD</h2><blockquote><p>文档：<a href="https://wiki.freecad.org/Manual:A_gentle_introduction">https://wiki.freecad.org/Manual:A_gentle_introduction</a></p></blockquote><p>打开 Python 面板：View—Panels—Python console</p><p>这样，我们在 FreeCAD 中的每一步操作都会有相应的 Python 代码在控制台输出。</p><h3 id="官方文档创建-box"><a href="#官方文档创建-box" class="headerlink" title="官方文档创建 box"></a>官方文档创建 box</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个新的空文档</span></span><br><span class="line">doc = FreeCAD.newDocument()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入doc可在控制台的提示中看到其属性与方法</span></span><br><span class="line"><span class="comment"># 通常以大写字母开头的名称是属性，以小写字母开头的名称是函数</span></span><br><span class="line">doc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将新对象添加到我们的文档中</span></span><br><span class="line">box = doc.addObject(<span class="string">&quot;Part::Box&quot;</span>,<span class="string">&quot;myBox&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 Python 时,文档不会自动重新计算。我们必须在需要时手动执行此操作来刷新界面</span></span><br><span class="line"><span class="comment"># doc.recompute() 执行完毕后就可以看到FreeCAD创建了一个立方体</span></span><br><span class="line">doc.recompute()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有的对象类型的列表</span></span><br><span class="line">doc.supportedTypes()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 探索一下盒子属性</span></span><br><span class="line">box.Height</span><br><span class="line"><span class="comment"># &gt;&gt; 10.0 mm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变盒子的尺寸</span></span><br><span class="line">box.Length=<span class="number">20</span></span><br><span class="line">box.Width = <span class="number">5</span></span><br><span class="line">box.Height = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看框的线条颜色</span></span><br><span class="line">box.ViewObject.LineColor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建矢量-矢量加减</span></span><br><span class="line">myvec = FreeCAD.Vector(<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">othervec = FreeCAD.Vector(<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>)</span><br><span class="line">sumvec = myvec.add(othervec)</span><br><span class="line"><span class="comment"># &gt;&gt; Vector (2.0, 3.0, 0.0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># FreeCAD每个对象都有一个 Placement 属性，它包含对象的位置（Base）和方向（Rotation）</span></span><br><span class="line">box.Placement</span><br><span class="line"><span class="comment"># &gt;&gt; Placement [Pos=(0,0,0), Yaw-Pitch-Roll=(0,0,0)]</span></span><br><span class="line">box.Placement.Base</span><br><span class="line"><span class="comment"># &gt;&gt; Vector (0.0, 0.0, 0.0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将box从点box.Placement.Base移动到点sumvec</span></span><br><span class="line">box.Placement.Base = sumvec</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409122020767.png"></p><h3 id="官方文档创建点-线-面-体"><a href="#官方文档创建点-线-面-体" class="headerlink" title="官方文档创建点-线-面-体"></a>官方文档创建点-线-面-体</h3><blockquote><p><a href="https://wiki.freecad.org/Manual:Creating_and_manipulating_geometry">https://wiki.freecad.org/Manual:Creating_and_manipulating_geometry</a></p></blockquote><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409131356169.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> FreeCAD</span><br><span class="line"><span class="keyword">import</span> Part</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 点</span></span><br><span class="line">V1 = FreeCAD.Vector(<span class="number">0</span>,<span class="number">10</span>,<span class="number">0</span>)</span><br><span class="line">V2 = FreeCAD.Vector(<span class="number">30</span>,<span class="number">10</span>,<span class="number">0</span>)</span><br><span class="line">V3 = FreeCAD.Vector(<span class="number">30</span>,-<span class="number">10</span>,<span class="number">0</span>)</span><br><span class="line">V4 = FreeCAD.Vector(<span class="number">0</span>,-<span class="number">10</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 线</span></span><br><span class="line">L1 = Part.LineSegment(V1,V2)</span><br><span class="line">L2 = Part.LineSegment(V4,V3)</span><br><span class="line">VC1 = FreeCAD.Vector(-<span class="number">10</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">C1 = Part.Arc(V1,VC1,V4)</span><br><span class="line">VC2 = FreeCAD.Vector(<span class="number">40</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">C2 = Part.Arc(V2,VC2,V3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 边界</span></span><br><span class="line">E1 = Part.Edge(L1)</span><br><span class="line">E2 = Part.Edge(L2)</span><br><span class="line">E3 = Part.Edge(C1)</span><br><span class="line">E4 = Part.Edge(C2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加几何到文档,几何名称会自动生成;也可以不添加,等形成了几何体,再添加体</span></span><br><span class="line"><span class="comment"># Part.show(E1)</span></span><br><span class="line"><span class="comment"># Part.show(E2)</span></span><br><span class="line"><span class="comment"># Part.show(E3)</span></span><br><span class="line"><span class="comment"># Part.show(E4)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 曲线</span></span><br><span class="line">W = Part.Wire([E1,E4,E2,E3])</span><br><span class="line"><span class="comment"># 面</span></span><br><span class="line">F = Part.Face(W)</span><br><span class="line"><span class="comment"># 体-拉伸</span></span><br><span class="line">P1 = F.extrude(FreeCAD.Vector(<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(P.ShapeType)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加几何体到文档</span></span><br><span class="line">obj = FreeCAD.ActiveDocument.addObject(<span class="string">&quot;Part::Feature&quot;</span>,<span class="string">&quot;Solid_1&quot;</span>)</span><br><span class="line">obj.Shape = P1</span><br><span class="line">FreeCAD.ActiveDocument.recompute()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="其他常用操作"><a href="#其他常用操作" class="headerlink" title="其他常用操作"></a>其他常用操作</h3><h4 id="创建几何"><a href="#创建几何" class="headerlink" title="创建几何"></a>创建几何</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">创建向量</span><br><span class="line">V1 = App.Vector(<span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">创建直线</span><br><span class="line">L1 = Part.LineSegment(V1, V2)</span><br><span class="line"></span><br><span class="line">创建圆线</span><br><span class="line">c = Part.makeCircle(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">创建圆弧线</span><br><span class="line">c = Part.Arc(V1, VC1, V4)</span><br><span class="line"></span><br><span class="line">创建多边形</span><br><span class="line">V1 = App.Vector(<span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">V2 = App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">V3 = App.Vector(<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">wire = Part.makePolygon([V1, V2, V3，V1])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">创建边界</span><br><span class="line">edge1 = Part.makeLine((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), (<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">edge2 = Part.makeLine((<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>), (<span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>))</span><br><span class="line">wire = Part.Wire([edge1, edge2])</span><br><span class="line"></span><br><span class="line">创建面</span><br><span class="line">face = Part.Face(wire1)</span><br><span class="line"></span><br><span class="line">创建平面</span><br><span class="line">plane = Part.makePlane(<span class="number">3</span>, <span class="number">3</span>, App.Vector(<span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>), App.Vector(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">创建椭圆</span><br><span class="line">Part.Ellipse(Center, MajorRadius, MinorRadius)</span><br><span class="line"></span><br><span class="line">创建环面</span><br><span class="line">tor=Part.makeTorus(<span class="number">20</span>, <span class="number">10</span>, App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), <span class="number">0</span>, <span class="number">360</span>, <span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">创建长方体</span><br><span class="line">box = Part.makeBox(<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">创建球体</span><br><span class="line">sphere1 = Part.makeSphere(<span class="number">5</span>)</span><br><span class="line">sphere2 = Part.makeSphere(<span class="number">5</span>, App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), -<span class="number">90</span>, <span class="number">90</span>, <span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">创建圆柱</span><br><span class="line">cylinder1 = Part.makeCylinder(<span class="number">4</span>, <span class="number">10</span>)</span><br><span class="line">cylinder2 = Part.makeCylinder(<span class="number">4</span>, <span class="number">10</span>, App.Vector(<span class="number">20</span>, <span class="number">0</span>, <span class="number">0</span>), App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), <span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">创建圆锥</span><br><span class="line">cone1 = Part.makeCone(<span class="number">5</span>, <span class="number">0</span>, <span class="number">20</span>)</span><br><span class="line">cone2 = Part.makeCone(<span class="number">5</span>, <span class="number">0</span>, <span class="number">20</span>, App.Vector(<span class="number">20</span>, <span class="number">0</span>, <span class="number">0</span>), App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), <span class="number">180</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="布尔操作"><a href="#布尔操作" class="headerlink" title="布尔操作"></a>布尔操作</h4><blockquote><p>合并 fuse，减 cut，相交 common</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> FreeCAD <span class="keyword">as</span> App</span><br><span class="line"><span class="keyword">import</span> Part</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 布尔减</span></span><br><span class="line">cylinder = Part.makeCylinder(<span class="number">3</span>, <span class="number">10</span>, App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), App.Vector(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"><span class="comment"># Part.show(cylinder)</span></span><br><span class="line"></span><br><span class="line">sphere = Part.makeSphere(<span class="number">5</span>, App.Vector(<span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"><span class="comment"># Part.show(sphere)</span></span><br><span class="line"></span><br><span class="line">diff = cylinder.cut(sphere)</span><br><span class="line">Part.show(diff)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Part.show(diff.Solids[0])</span></span><br></pre></td></tr></table></figure><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409131401397.png"></p><h4 id="平移"><a href="#平移" class="headerlink" title="平移"></a>平移</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> FreeCAD <span class="keyword">as</span> App</span><br><span class="line"></span><br><span class="line">myShape = Part.makeBox(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">Part.show(myShape)</span><br><span class="line">myShape.Placement</span><br><span class="line"><span class="comment"># &gt;&gt; Placement [Pos=(0,0,0), Yaw-Pitch-Roll=(0,0,0)]</span></span><br><span class="line"></span><br><span class="line">myShape.translate(App.Vector(<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">Part.show(myShape)</span><br><span class="line">myShape.Placement</span><br><span class="line"><span class="comment"># &gt;&gt; Placement [Pos=(10,0,0), Yaw-Pitch-Roll=(0,0,0)]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409131416318.png"></p><h4 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> FreeCAD <span class="keyword">as</span> App</span><br><span class="line"></span><br><span class="line">myShape = Part.makeBox(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">Part.show(myShape)</span><br><span class="line">myShape.Placement</span><br><span class="line"><span class="comment"># &gt;&gt; Placement [Pos=(0,0,0), Yaw-Pitch-Roll=(0,0,0)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绕直线(0,0,0)-(0,0,1)旋转180°</span></span><br><span class="line">myShape.rotate(App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),App.Vector(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), <span class="number">180</span>)</span><br><span class="line">Part.show(myShape)</span><br><span class="line">myShape.Placement</span><br><span class="line"><span class="comment"># &gt;&gt; Placement [Pos=(0,0,0), Yaw-Pitch-Roll=(180,0,0)]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409131417914.png"></p><h4 id="矩阵变换与缩放"><a href="#矩阵变换与缩放" class="headerlink" title="矩阵变换与缩放"></a>矩阵变换与缩放</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 矩阵变换</span></span><br><span class="line">myMat = App.Matrix()</span><br><span class="line">myMat.move(App.Vector(<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">myMat.rotateZ(math.pi/<span class="number">2</span>)</span><br><span class="line">myShape.transformShape(myMat)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩放</span></span><br><span class="line">myMat = App.Matrix()</span><br><span class="line">myMat.scale(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">myShape=myShape.transformGeometry(myMat)</span><br></pre></td></tr></table></figure><h4 id="导入-stp-文件"><a href="#导入-stp-文件" class="headerlink" title="导入 stp 文件"></a>导入 stp 文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Part</span><br><span class="line">shape = Part.Shape()</span><br><span class="line">shape.read(<span class="string">&quot;your_file_path&quot;</span>)</span><br><span class="line">shape</span><br></pre></td></tr></table></figure><h3 id="界面制作"><a href="#界面制作" class="headerlink" title="界面制作"></a>界面制作</h3><p><a href="https://www.yuque.com/xdd1997/ek3kug/xk5xu4?singleDoc#">https://www.yuque.com/xdd1997/ek3kug/xk5xu4?singleDoc#</a> 《FreeCAD 笔记》</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;官网：&lt;a href=&quot;https://www.freecad.org/&quot;&gt;https://www.freecad.org/&lt;/a&gt;&lt;/p&gt;</summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="python" scheme="https://19970622.xyz/tags/python/"/>
    
    <category term="freecad" scheme="https://19970622.xyz/tags/freecad/"/>
    
  </entry>
  
  <entry>
    <title>HyperMesh-Python-API</title>
    <link href="https://19970622.xyz/posts/104026/"/>
    <id>https://19970622.xyz/posts/104026/</id>
    <published>2024-09-10T16:00:00.000Z</published>
    <updated>2024-09-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>官方文档：<a href="https://help.altair.com/hwdesktop/pythonapi/hypermesh.html">https://help.altair.com/hwdesktop/pythonapi/hypermesh.html</a></p><h2 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h2><h3 id="Session-and-Model-class"><a href="#Session-and-Model-class" class="headerlink" title="Session and Model class"></a>Session and Model class</h3><p>此功能允许用户在单个会话中使用多个 HyperMesh 模型，并通过多窗口布局将它们并排组织在单个页面上。设置了 Session 和 Model 两个类来提供管理此场景的机制。</p><p>对于我们常用的情境，只有一个模型，比较简单。</p><p><code>hm.Session()</code></p><p><code>hm.Model()</code></p><h3 id="Entity-Classes"><a href="#Entity-Classes" class="headerlink" title="Entity Classes"></a>Entity Classes</h3><p>每个 HyperMesh 实体类型(e.g. node, line, element, property)都由 hm.entities 模块中的相应类表示。因此，每个 HyperMesh 实体都可以表示为 Python 对象。所有的可用对象可以在下面网址查到：</p><p><a href="https://help.altair.com/hwdesktop/pythonapi/hypermesh/hm_entities.html#">https://help.altair.com/hwdesktop/pythonapi/hypermesh/hm_entities.html</a></p><h3 id="Collections"><a href="#Collections" class="headerlink" title="Collections"></a>Collections</h3><p>在操作时各种命令都会有一个操作对象的范围，比如删除 1~10 号单元，复制所有结点等操作。这些对象的范围指定就需要使用 Collections 类。例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">% 选择<span class="number">1</span>,<span class="number">2</span>号Component</span><br><span class="line">hm.Collection(model, ent.Component, [<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">% 选择<span class="built_in">id</span>=<span class="number">1</span>,<span class="number">2</span>的component里面的单元</span><br><span class="line">elems = hm.Collection(model, ent.Element, hm.Collection(m, ent.Component, [<span class="number">1</span>,<span class="number">2</span>]))</span><br><span class="line"></span><br><span class="line">% 特别的,如果需要所有单元,就不需要第<span class="number">3</span>项了</span><br><span class="line">elems = hm.Collection(model,ent.Element)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空的选集</span></span><br><span class="line">empty_elem_col = hm.Collection(model,ent.Element,populate=<span class="literal">False</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于选集，有 4 个特别的函数: CollectionByAdjacent, CollectionByAttached, <strong>CollectionByDisplayed</strong>, CollectionByFace</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Collection of displayed elements</span></span><br><span class="line">elm_disp = hm.CollectionByDisplayed(model, ent.Element)</span><br></pre></td></tr></table></figure><h3 id="查询与修改函数"><a href="#查询与修改函数" class="headerlink" title="查询与修改函数"></a>查询与修改函数</h3><h4 id="Model-Class-Query-Functions"><a href="#Model-Class-Query-Functions" class="headerlink" title="Model Class Query Functions"></a><font style="color:rgb(34, 40, 50);">Model Class Query Functions</font></h4><p>所有可用的查询函数：<a href="https://help.altair.com/hwdesktop/pythonapi/hypermesh/hm_query_funcs.html">https://help.altair.com/hwdesktop/pythonapi/hypermesh/hm_query_funcs.html</a></p><p>查询函数使用说明：<a href="https://help.altair.com/hwdesktop/pythonapi/hypermesh/hm_user_guide/hypermesh_funcs.html#query-functions">https://help.altair.com/hwdesktop/pythonapi/hypermesh/hm_user_guide&#x2F;hypermesh_funcs.html#query-functions</a></p><blockquote><p>所有 HyperMesh 函数都返回一个状态对象。大多数查询函数还返回一个结果对象。通过状态对象，您可以查看函数返回的消息以及告诉函数是否成功的状态。状态值 0 表示成功，非零值表示失败。</p><p>查询函数的名称总是以“hm_”开头。它们的特点是，它们中的大多数除了返回状态对象外，还返回携带查询信息的结果对象。有两种类型的结果对象&#x2F;类——HmQueryResult 和 HmQueryResultList。</p><p>HmQueryResult 是一种 HyperMesh 数据类型，默认情况下具有属性键<code>result.key</code>，该属性键返回携带函数返回的信息的所有属性的列表。</p><p>HmQueryResultList 表示 HmQueryResult 对象的列表。<code>len(result)</code>,<code>result[0].key</code></p></blockquote><h4 id="Model-Class-Modify-Functions"><a href="#Model-Class-Modify-Functions" class="headerlink" title="Model Class Modify Functions"></a><font style="color:rgb(34, 40, 50);">Model Class Modify Functions</font></h4><p><a href="https://help.altair.com/hwdesktop/pythonapi/hypermesh/hm_mod_funcs.html">https://help.altair.com/hwdesktop/pythonapi/hypermesh/hm_mod_funcs.html</a></p><p>比如连直线，多个直线围成面，移动复制单元等</p><h3 id="牛刀小试"><a href="#牛刀小试" class="headerlink" title="牛刀小试"></a>牛刀小试</h3><p>好，大致知识点就上面那些，下面我们要创建一个面并计算面积，步骤应该是：点-线-面-计算面积。</p><p><strong>Step1: 创建 4 个角结点</strong></p><p>要先找点的 Class, 好，找到了，叫<code>Nodes</code>, 下面是 Nodes 类的定义文档。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span>(amodel: Model, *args, **kwargs)</span><br><span class="line"></span><br><span class="line">Parameters: 几乎所有的Entity Class都是这种格式</span><br><span class="line">amodel (Model) – HyperMesh model <span class="built_in">object</span>.</span><br><span class="line">args (<span class="built_in">dict</span>) – User can specify internal entity ID to create an entity <span class="built_in">object</span></span><br><span class="line">              <span class="keyword">for</span> an existing entity.</span><br><span class="line">kwargs (<span class="built_in">dict</span>) – <span class="type">Optional</span> name-value pair arguments defining attributes of a new entity.</span><br></pre></td></tr></table></figure><p>根据文档，需要输入 Model 对象，还需要一些参数。args 是 ID，kwargs 是一些键值对。这些键值对需要去 DateName 里面找：<a href="https://help.altair.com/hwdesktop/hwd/topics/reference/hm/data_names-nodes.htm">data_names-nodes.htm</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># creat node</span></span><br><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line"></span><br><span class="line">model = hm.Model()</span><br><span class="line"></span><br><span class="line">nodeNew = ent.Node(model)</span><br><span class="line">nodeNew.localcoordinates =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">nodeNew.<span class="built_in">id</span></span><br><span class="line">nodeNew.coordinates</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面创建四个 node</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line"></span><br><span class="line">model = hm.Model()</span><br><span class="line"></span><br><span class="line">N1 = ent.Node(model)</span><br><span class="line">N1.localcoordinates =[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">N2 = ent.Node(model)</span><br><span class="line">N2.localcoordinates =[<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">N3 = ent.Node(model)</span><br><span class="line">N3.localcoordinates =[<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>]</span><br><span class="line">N4 = ent.Node(model)</span><br><span class="line">N4.localcoordinates =[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Step2: 连直线</strong></p><p>想着肯定是使用 Line Class, 再去找 Line 的 DataName: <a href="https://help.altair.com/hwdesktop/hwd/topics/reference/hm/data_names-lines.htm">data_names-lines.htm</a>, 应该需要 startcoords 与 endcoords。实验一下：上面的 Line Class 好像不能创建直线。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line">model = hm.Model()</span><br><span class="line">L1 = ent.Line(model)</span><br><span class="line"><span class="comment"># RuntimeError: Invalid uid</span></span><br></pre></td></tr></table></figure><p>使用 Model 的修改函数可以，如下。但是 L1 不能直接拿到 id。可使用<code>hm_entitymaxid</code>查询并记录编号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line"></span><br><span class="line">model = hm.Model()</span><br><span class="line"></span><br><span class="line"><span class="comment"># *linecreatestraight x1 y1 z1 x2 y2 z2</span></span><br><span class="line">L1 = model.linecreatestraight(x1=<span class="number">0</span>,y1=<span class="number">0</span>,z1=<span class="number">0</span>, x2=<span class="number">2</span>,y2=<span class="number">0</span>,z2=<span class="number">0</span>)</span><br><span class="line">L2 = model.linecreatestraight(x1=<span class="number">2</span>,y1=<span class="number">0</span>,z1=<span class="number">0</span>, x2=<span class="number">2</span>,y2=<span class="number">1</span>,z2=<span class="number">0</span>)</span><br><span class="line">L3 = model.linecreatestraight(x1=<span class="number">2</span>,y1=<span class="number">1</span>,z1=<span class="number">0</span>, x2=<span class="number">0</span>,y2=<span class="number">1</span>,z2=<span class="number">0</span>)</span><br><span class="line">L4 = model.linecreatestraight(x1=<span class="number">0</span>,y1=<span class="number">1</span>,z1=<span class="number">0</span>, x2=<span class="number">0</span>,y2=<span class="number">0</span>,z2=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">status,result = model.hm_entitymaxid(ent.Line)</span><br><span class="line">L4_id = result.maxInternalID</span><br><span class="line"></span><br><span class="line">lines = hm.Collection(model, ent.Line)</span><br><span class="line"><span class="keyword">for</span> it <span class="keyword">in</span> lines:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Line ID:<span class="subst">&#123;it.<span class="built_in">id</span>&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(it.startcoords)</span><br><span class="line">    <span class="built_in">print</span>(it.endcoords)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xdd&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>现在的问题是这些修改函数怎么能知道，最简单的方法还是在 HyperMesh 操作一遍，然后看 command.tcl 文件</p></blockquote><p><strong>Step3: 创建面</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line"></span><br><span class="line">model = hm.Model()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建直线  *linecreatestraight x1 y1 z1 x2 y2 z2</span></span><br><span class="line">L1 = model.linecreatestraight(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">L2 = model.linecreatestraight(<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>, <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line">L3 = model.linecreatestraight(<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>, <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line">L4 = model.linecreatestraight(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建选集</span></span><br><span class="line">lines = hm.Collection(model, ent.Line)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建面  *surfacesplineonlinesloop mark_id fill_gaps use_surfs options</span></span><br><span class="line">model.surfacesplineonlinesloop(lines,<span class="number">1</span>,<span class="number">1</span>,<span class="number">67</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看面积</span></span><br><span class="line">status,result = model.hm_entitymaxid(ent.Surface)</span><br><span class="line">face1_id = result.maxInternalID</span><br><span class="line">face1_class = ent.Surface(model, face1_id)</span><br><span class="line">face1_class.area</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>官方案例：<a href="https://help.altair.com/hwdesktop/pythonapi/hypermesh/examples/hm_examples.html#">https://help.altair.com/hwdesktop/pythonapi/hypermesh/examples/hm_examples.html#</a></p><h3 id="获取某-entity-最大编号"><a href="#获取某-entity-最大编号" class="headerlink" title="获取某 entity 最大编号"></a>获取某 entity 最大编号</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line"></span><br><span class="line">model = hm.Model()</span><br><span class="line"></span><br><span class="line">N1 = ent.Node(model)</span><br><span class="line">N1.localcoordinates =[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">N2 = ent.Node(model)</span><br><span class="line">N2.localcoordinates =[<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取结点最大编号</span></span><br><span class="line">status,result = model.hm_entitymaxid(ent.Node)</span><br><span class="line">result.maxInternalID</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>在此强调：要善于使用 Tab 键</p></blockquote><h3 id="查看-X-号结点的坐标"><a href="#查看-X-号结点的坐标" class="headerlink" title="查看 X 号结点的坐标"></a>查看 X 号结点的坐标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line"></span><br><span class="line">model = hm.Model()</span><br><span class="line"><span class="built_in">id</span> = <span class="number">2</span></span><br><span class="line">node = ent.Node(model, <span class="built_in">id</span>)</span><br><span class="line">node.coordinates</span><br><span class="line">node.y</span><br></pre></td></tr></table></figure><h3 id="创建并指定材料与属性"><a href="#创建并指定材料与属性" class="headerlink" title="创建并指定材料与属性"></a>创建并指定材料与属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line"></span><br><span class="line">model = hm.Model()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建材料</span></span><br><span class="line">mat1 = ent.Material(model)</span><br><span class="line">mat1.name = <span class="string">&quot;Steel&quot;</span></span><br><span class="line">mat1.cardimage = <span class="string">&quot;MAT1&quot;</span></span><br><span class="line">mat1.E = <span class="number">21e04</span></span><br><span class="line">mat1.Nu = <span class="number">0.3</span></span><br><span class="line">mat1.Rho = <span class="number">7850</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建属性,并为属性添加材料</span></span><br><span class="line">prop1 = ent.Property(model)</span><br><span class="line">prop1.name = <span class="string">&quot;Prop&quot;</span></span><br><span class="line">prop1.cardimage = <span class="string">&quot;PSOLID&quot;</span></span><br><span class="line">prop1.materialid = mat1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为某个Component指定属性</span></span><br><span class="line">compID = <span class="number">5</span></span><br><span class="line">comp1 = ent.Component(model, compID)</span><br><span class="line">comp1.<span class="built_in">property</span> = prop1</span><br></pre></td></tr></table></figure><h3 id="创建一个矢量用于移动单元"><a href="#创建一个矢量用于移动单元" class="headerlink" title="创建一个矢量用于移动单元"></a>创建一个矢量用于移动单元</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm</span><br><span class="line"><span class="keyword">import</span> hm.entities <span class="keyword">as</span> ent</span><br><span class="line"></span><br><span class="line">model = hm.Model()</span><br><span class="line"></span><br><span class="line">elems = hm.Collection(model,ent.Element)</span><br><span class="line">model.translatemark(collection=elems,vector_id=hm.hwTriple(<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">1.0</span>),distance=<span class="number">500.0</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;官方文档：&lt;a href=&quot;https://help.altair.com/hwdesktop/pythonapi/hypermesh.ht</summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="python" scheme="https://19970622.xyz/tags/python/"/>
    
    <category term="hypermesh" scheme="https://19970622.xyz/tags/hypermesh/"/>
    
    <category term="tcl" scheme="https://19970622.xyz/tags/tcl/"/>
    
  </entry>
  
  <entry>
    <title>PyQt的线程类QThread与计时器类Qtimer</title>
    <link href="https://19970622.xyz/posts/142701/"/>
    <id>https://19970622.xyz/posts/142701/</id>
    <published>2024-09-07T16:00:00.000Z</published>
    <updated>2024-09-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>pyqt5 使用多线程避免程序假死 - 蔚蓝色の天空 - 博客园</p><p><a href="https://www.cnblogs.com/future-dream/p/14749132.html">https://www.cnblogs.com/future-dream/p/14749132.html</a></p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在下面这样一个界面，我们希望实现点击<code>按钮1</code>之后，在标签上依次打印 1,2,3,4，…</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/1488614/1725951830020-5312a8b9-5e2a-4ceb-bd14-20568e96e412.png"></p><p>下面的代码无法实现，因为单线程的原因，只会在标签上打印最后一个数字，且等待时间会出现意思崩溃的假象，因此我们需要使用多线程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5.Qt <span class="keyword">import</span> QApplication, QWidget, QPushButton, QLabel</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyWinClass</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.btn_1 = QPushButton(<span class="string">&#x27;按钮1&#x27;</span>, self)</span><br><span class="line">        self.btn_1.move(<span class="number">120</span>, <span class="number">80</span>)</span><br><span class="line">        self.btn_1.clicked.connect(self.btn_1_click)</span><br><span class="line"></span><br><span class="line">        self.label_1 = QLabel(<span class="string">&#x27;标签啊标签&#x27;</span>, self)</span><br><span class="line">        self.label_1.move(<span class="number">120</span>, <span class="number">120</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">btn_1_click</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">for</span> ii <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            self.label_1.setText(<span class="built_in">str</span>(ii))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    w = MyWinClass()</span><br><span class="line">    w.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h2 id="QThread"><a href="#QThread" class="headerlink" title="QThread"></a>QThread</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5.Qt <span class="keyword">import</span> QApplication, QWidget, QPushButton, QLabel</span><br><span class="line"><span class="keyword">from</span> PyQt5.Qt <span class="keyword">import</span> QThread, pyqtSignal</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Thread_1</span>(<span class="title class_ inherited__">QThread</span>):</span><br><span class="line">    signal = pyqtSignal(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">for</span> ii <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            self.signal.emit(<span class="built_in">str</span>(ii))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyWinClass</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.btn_1 = QPushButton(<span class="string">&#x27;按钮1&#x27;</span>, self)</span><br><span class="line">        self.btn_1.move(<span class="number">120</span>, <span class="number">80</span>)</span><br><span class="line">        self.btn_1.clicked.connect(self.btn_1_click)</span><br><span class="line"></span><br><span class="line">        self.label_1 = QLabel(<span class="string">&#x27;标签啊标签&#x27;</span>, self)</span><br><span class="line">        self.label_1.move(<span class="number">120</span>, <span class="number">120</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">btn_1_click</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 实例化一个线程-绑定处理线程信号的函数</span></span><br><span class="line">        self.thread = Thread_1()</span><br><span class="line">        self.thread.signal.connect(self.show_msg)</span><br><span class="line">        self.thread.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_msg</span>(<span class="params">self, str00</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot; 处理线程信号的函数 &quot;&quot;&quot;</span></span><br><span class="line">        self.label_1.setText(str00)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    w = MyWinClass()</span><br><span class="line">    w.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><ol><li>建立一个继承 QThread 的类 Thread_1，重写 run 函数。在 run 函数中编写耗时或者单线程不便处理的函数，让<code>run</code>函数执行完毕后发出一个信号 signal，在<code>MyWinClass</code>里面编写处理这个信号的函数。</li><li>整个流程的逻辑是：(1) 在主程序中实例化一个 Thread_1 类的线程对象<code>self.thread</code>，(2) 绑定<code>self.thread</code>的槽的处理函数， (3) 执行<code>self.thread.start()</code>，就会执行<code>self.thread.run()</code>，然后发出信号，调用处理槽的函数。</li><li>QThread 缺点是不能自己选择终止进程，也可能是我没找到。对于间隔执行的任务，建议使用计时器<font style="color:rgb(34, 34, 38);">Qtimer，可以自己选择终止任务。</font></li></ol><h2 id="Qtimer"><a href="#Qtimer" class="headerlink" title="Qtimer"></a><font style="color:rgb(34, 34, 38);">Qtimer</font></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step1 导入模块</span></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QTime</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step2 在初始化的函数里面添加</span></span><br><span class="line">self.time = QTimer(self)                       <span class="comment"># 设置一个计时器</span></span><br><span class="line">self.time.timeout.connect(self.YourFunction)   <span class="comment"># timeout事件的绑定</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step3 在开始按钮添加</span></span><br><span class="line">self.time.start(<span class="number">1000</span>)  <span class="comment"># 计时开始,单位毫秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step4 在结束按钮添加</span></span><br><span class="line">self.time.stop()  <span class="comment"># 计时结束，只有开始状态才能结束</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;pyqt5 使用多线程避免程序假死 - 蔚蓝色の天空 - 博客园&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.c</summary>
      
    
    
    
    <category term="python" scheme="https://19970622.xyz/categories/python/"/>
    
    
    <category term="python" scheme="https://19970622.xyz/tags/python/"/>
    
    <category term="QThread" scheme="https://19970622.xyz/tags/QThread/"/>
    
    <category term="Qtimer" scheme="https://19970622.xyz/tags/Qtimer/"/>
    
  </entry>
  
  <entry>
    <title>Matlab发声函数sound</title>
    <link href="https://19970622.xyz/posts/145910/"/>
    <id>https://19970622.xyz/posts/145910/</id>
    <published>2024-09-06T16:00:00.000Z</published>
    <updated>2024-09-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ol><li><a href="https://blog.csdn.net/qq_36002089/article/details/128738885">Matlab 发声函数 sound 问题_matlab sound-CSDN 博客</a></li><li>Matlab 官方文档: <a href="https://www.mathworks.com/help/matlab/ref/sound.html">Convert matrix of signal data to sound - MATLAB sound</a></li></ol><h2 id="sound"><a href="#sound" class="headerlink" title="sound"></a>sound</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a><font style="color:rgb(64, 64, 64);">语法</font></h3><p>sound(y)</p><p>sound(y,Fs)</p><p>sound(y,Fs,nBits)</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a><font style="color:rgb(64, 64, 64);">说明</font></h3><p>sound(y) 以默认采样率 8192 赫兹向扬声器发送音频信号 y</p><p>sound(y,Fs) 以采样率 Fs 向扬声器发送音频信号 y</p><p>sound(y,Fs,nBits) 对音频信号 y 使用 nBits 的采样位数</p><p><font style="color:rgb(64, 64, 64);"></font></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a><font style="color:rgb(64, 64, 64);">示例</font></h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 锣声</span></span><br><span class="line">load handel</span><br><span class="line">sound(y,Fs)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 笑声</span></span><br><span class="line">load laughter</span><br><span class="line">sound(y,Fs)</span><br><span class="line"></span><br><span class="line"><span class="comment">%鸟声</span></span><br><span class="line">load chirp</span><br><span class="line">sound(y,Fs)</span><br><span class="line"></span><br><span class="line"><span class="comment">%qiu-pa</span></span><br><span class="line">load splat</span><br><span class="line">sound(y,Fs)</span><br><span class="line"></span><br><span class="line"><span class="comment">%火车</span></span><br><span class="line">load train</span><br><span class="line">sound(y,Fs)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 播放 Hallelujah Chorus</span></span><br><span class="line">load handel.mat;</span><br><span class="line">sound(y, Fs);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以录制的采样率的两倍播放 Hallelujah Chorus</span></span><br><span class="line">load handel.mat;</span><br><span class="line">sound(y, <span class="number">2</span>*Fs);</span><br></pre></td></tr></table></figure><p>播放 do，re，mi，fa，so，la，ti</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fs=<span class="number">44100</span>;</span><br><span class="line">t=<span class="number">0</span>: <span class="number">1</span>/fs: <span class="number">0.5</span>;</span><br><span class="line">do=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">261.63</span> *t);</span><br><span class="line">re=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">293.66</span> *t);</span><br><span class="line">mi=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">329.63</span> *t);</span><br><span class="line">fa=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">349.23</span> *t);</span><br><span class="line">so=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">392.00</span> *t);</span><br><span class="line">la=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">440.00</span> *t);</span><br><span class="line">ti=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">493.88</span> *t);</span><br><span class="line">Cscale=[do,re,mi,fa,so,la,ti];</span><br><span class="line">sound(Cscale,fs)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/qq_36002089/article/details/12873</summary>
      
    
    
    
    <category term="编程语言" scheme="https://19970622.xyz/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="matlab" scheme="https://19970622.xyz/tags/matlab/"/>
    
    <category term="sound" scheme="https://19970622.xyz/tags/sound/"/>
    
    <category term="声音" scheme="https://19970622.xyz/tags/%E5%A3%B0%E9%9F%B3/"/>
    
  </entry>
  
  <entry>
    <title>UG使用入门教程</title>
    <link href="https://19970622.xyz/posts/194059/"/>
    <id>https://19970622.xyz/posts/194059/</id>
    <published>2024-09-02T16:00:00.000Z</published>
    <updated>2024-09-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="视图-鼠标键盘操作"><a href="#视图-鼠标键盘操作" class="headerlink" title="视图&#x2F;鼠标键盘操作"></a>视图&#x2F;鼠标键盘操作</h2><p><font style="color:rgb(77, 77, 77);">视图旋转：中键</font></p><p><font style="color:rgb(77, 77, 77);">视图平移：shift 键+中键</font></p><p><font style="color:rgb(77, 77, 77);">视图缩放：Ctrl 键+中键</font></p><p><font style="color:rgb(77, 77, 77);">摆正视图：F8 键</font></p><p><font style="color:rgb(77, 77, 77);">鼠标中键一般可以当做</font><code>&lt;font style=&quot;color:rgb(77, 77, 77);&quot;&gt;确认键&lt;/font&gt;</code><font style="color:rgb(77, 77, 77);">使用，比如绘图，拉伸等命令</font></p><p><font style="color:rgb(77, 77, 77);"></font></p><h2 id="草图"><a href="#草图" class="headerlink" title="草图"></a>草图</h2><h3 id="新建草图"><a href="#新建草图" class="headerlink" title="新建草图"></a>新建草图</h3><p>菜单—插入—在任务环境中插入草图</p><h3 id="新建约束"><a href="#新建约束" class="headerlink" title="新建约束"></a>新建约束</h3><p>菜单—插入—几何约束</p><h3 id="选择曲线"><a href="#选择曲线" class="headerlink" title="选择曲线"></a>选择曲线</h3><p>注意可以筛选<code>单条曲线</code>与<code>相连曲线</code></p><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202409031952738.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;视图-鼠标键盘操作&quot;&gt;&lt;a href=&quot;#视图-鼠标键盘操作&quot; class=&quot;headerlink&quot; title=&quot;视图&amp;#x2F;鼠标键盘操作&quot;&gt;&lt;/a&gt;视图&amp;#x2F;鼠标键盘操作&lt;/h2&gt;&lt;p&gt;&lt;font style=&quot;color:rgb(77, 77, 7</summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="ug" scheme="https://19970622.xyz/tags/ug/"/>
    
  </entry>
  
  <entry>
    <title>Matlab发送邮件</title>
    <link href="https://19970622.xyz/posts/212433/"/>
    <id>https://19970622.xyz/posts/212433/</id>
    <published>2024-08-24T16:00:00.000Z</published>
    <updated>2024-08-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">receiver = <span class="string">&quot;xdd2026@qq.com&quot;</span>;</span><br><span class="line">mailtitle = <span class="string">&quot;来自Matlab&quot;</span>;</span><br><span class="line">mailcontent = <span class="string">&quot;Matlab已经执行完毕&quot;</span>;</span><br><span class="line">attachments = [];  <span class="comment">% attachments =&#x27;D:\status.txt&#x27;</span></span><br><span class="line">SentMail(receiver, mailtitle, mailcontent, attachments)</span><br></pre></td></tr></table></figure><h3 id="SentMail-函数"><a href="#SentMail-函数" class="headerlink" title="SentMail 函数"></a>SentMail 函数</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SentMail</span><span class="params">(receiver, mailtitle, mailcontent, attachments)</span></span></span><br><span class="line"><span class="comment">% Example:</span></span><br><span class="line"><span class="comment">%     SentMail(&#x27;xdd2026@qq.com&#x27;, &#x27;来自Matlab的email&#x27;, &#x27;运行完成&#x27;, [])</span></span><br><span class="line"><span class="comment">%     SentMail(&#x27;xdd2026@qq.com&#x27;, &#x27;来自Matlab的email&#x27;, &#x27;运行完成&#x27;, &#x27;D:\status.txt&#x27;)</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 添加邮箱和IMAP/SMTP授权码</span></span><br><span class="line">mail = <span class="string">&#x27;xdd2026@163.com&#x27;</span>;</span><br><span class="line">password = <span class="string">&#x27;****&#x27;</span>;  <span class="comment">% IMAP/SMTP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 设置服务器，其中只有邮箱后缀需改动</span></span><br><span class="line">setpref(<span class="string">&#x27;Internet&#x27;</span>, <span class="string">&#x27;E_mail&#x27;</span>, mail);</span><br><span class="line">setpref(<span class="string">&#x27;Internet&#x27;</span>, <span class="string">&#x27;SMTP_Server&#x27;</span>, <span class="string">&#x27;smtp.163.com&#x27;</span>);  <span class="comment">% SMTP服务码</span></span><br><span class="line">setpref(<span class="string">&#x27;Internet&#x27;</span>, <span class="string">&#x27;SMTP_Username&#x27;</span>, mail);</span><br><span class="line">setpref(<span class="string">&#x27;Internet&#x27;</span>, <span class="string">&#x27;SMTP_Password&#x27;</span>, password);</span><br><span class="line">props = java.lang.System.getProperties;props.setProperty(<span class="string">&#x27;mail.smtp.auth&#x27;</span>, <span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">props.setProperty(<span class="string">&#x27;mail.smtp.socketFactory.class&#x27;</span>, <span class="string">&#x27;javax.net.ssl.SSLSocketFactory&#x27;</span>);</span><br><span class="line">props.setProperty(<span class="string">&#x27;mail.smtp.socketFactory.port&#x27;</span>, <span class="string">&#x27;465&#x27;</span>);</span><br><span class="line"></span><br><span class="line">sendmail(receiver, mailtitle, mailcontent, attachments);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;调用方式&quot;&gt;&lt;a href=&quot;#调用方式&quot; class=&quot;headerlink&quot; title=&quot;调用方式&quot;&gt;&lt;/a&gt;调用方式&lt;/h3&gt;&lt;figure class=&quot;highlight matlab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    <category term="编程语言" scheme="https://19970622.xyz/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="matlab" scheme="https://19970622.xyz/tags/matlab/"/>
    
    <category term="邮件" scheme="https://19970622.xyz/tags/%E9%82%AE%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Python与Excel交互-xlwings</title>
    <link href="https://19970622.xyz/posts/191659/"/>
    <id>https://19970622.xyz/posts/191659/</id>
    <published>2024-08-23T16:00:00.000Z</published>
    <updated>2024-08-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>xlwings 官网：<a href="https://docs.xlwings.org/en/stable/index.html">https://docs.xlwings.org/en/stable/index.html</a></p><p><a href="https://mp.weixin.qq.com/s/j-VhxycCjJDyHLwX3RRRiA">运营学 Python ｜ Python&amp;Excel 联动(上)</a></p><p>注意：使用这个模型需要安装 Excel，相较于 openpyxl 可能效率不足，但是<strong>可实时看到结果</strong></p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><ol><li>打开 Jupyter Notebook—新建 Python 文件</li><li>安装模块 <code>!pip3 install xlwings --user</code></li><li>xlwings 的操作逻辑依次为 App—Book—Sheet—Range</li></ol><h3 id="创建场景"><a href="#创建场景" class="headerlink" title="创建场景"></a>创建场景</h3><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202408242030745.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xlwings <span class="keyword">as</span> xw</span><br><span class="line"></span><br><span class="line"><span class="comment"># app应用 Excel程序</span></span><br><span class="line">app = xw.App(visible=<span class="literal">True</span>, add_book=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 工作簿 book</span></span><br><span class="line">wb = app.books.add()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 表 sheet</span></span><br><span class="line"><span class="comment"># sht = wb.sheets.add(&#x27;first_sht&#x27;)  # 增</span></span><br><span class="line">sht = wb.sheets(<span class="string">&#x27;Sheet1&#x27;</span>)         <span class="comment"># 选</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 单元格</span></span><br><span class="line">sht.<span class="built_in">range</span>(<span class="string">&#x27;A1&#x27;</span>).value = <span class="string">&#x27;简说 Python&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存与退出</span></span><br><span class="line">wb.save(<span class="string">&#x27;xlwings_wb.xlsx&#x27;</span>)</span><br><span class="line">wb.close()</span><br><span class="line">app.quit()</span><br></pre></td></tr></table></figure><h3 id="修改场景"><a href="#修改场景" class="headerlink" title="修改场景"></a>修改场景</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xlwings <span class="keyword">as</span> xw</span><br><span class="line"></span><br><span class="line">app = xw.App(visible=<span class="literal">True</span>, add_book=<span class="literal">False</span>)</span><br><span class="line">book = app.books.<span class="built_in">open</span>(<span class="string">&#x27;xlwings_wb.xlsx&#x27;</span>)  <span class="comment"># 打开excel文件</span></span><br><span class="line">sheet = book.sheets(<span class="string">&#x27;Sheet1&#x27;</span>)             <span class="comment"># 选择sheet</span></span><br><span class="line">sheet.<span class="built_in">range</span>(<span class="string">&#x27;B2&#x27;</span>).value = <span class="string">&#x27;简说Python&#x27;</span></span><br><span class="line"></span><br><span class="line">book.save(book.fullname)</span><br><span class="line">book.close()</span><br><span class="line">app.quit()</span><br></pre></td></tr></table></figure><h2 id="xlwings-语法"><a href="#xlwings-语法" class="headerlink" title="xlwings 语法"></a>xlwings 语法</h2><p><a href="https://docs.xlwings.org/en/stable/api/index.html">https://docs.xlwings.org/en/stable/api/index.html</a></p><h3 id="Books-Book"><a href="#Books-Book" class="headerlink" title="Books&#x2F;Book"></a>Books&#x2F;Book</h3><p>Book: <a href="https://docs.xlwings.org/en/stable/api/book.html">https://docs.xlwings.org/en/stable/api/book.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Books.active</span><br><span class="line">Books.add()</span><br><span class="line">Books.<span class="built_in">open</span>()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Book.activate()</span><br><span class="line">Book.api</span><br><span class="line">Book.app</span><br><span class="line">Book.caller()</span><br><span class="line">Book.close()</span><br><span class="line">Book.fullname</span><br><span class="line">Book.json()</span><br><span class="line">Book.macro()</span><br><span class="line">Book.name</span><br><span class="line">Book.names</span><br><span class="line">Book.render_template()</span><br><span class="line">Book.save()</span><br><span class="line">Book.selection</span><br><span class="line">Book.set_mock_caller()</span><br><span class="line">Book.sheet_names</span><br><span class="line">Book.sheets</span><br><span class="line">Book.to_pdf()</span><br></pre></td></tr></table></figure><h3 id="Sheets-Sheet"><a href="#Sheets-Sheet" class="headerlink" title="Sheets&#x2F;Sheet"></a>Sheets&#x2F;Sheet</h3><p>Sheet: <a href="https://docs.xlwings.org/en/stable/api/sheet.html">https://docs.xlwings.org/en/stable/api/sheet.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sheets.active</span><br><span class="line">Sheets.add()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Sheet.activate()</span><br><span class="line">Sheet.api</span><br><span class="line">Sheet.autofit()</span><br><span class="line">Sheet.book</span><br><span class="line">Sheet.cells</span><br><span class="line">Sheet.charts</span><br><span class="line">Sheet.clear()</span><br><span class="line">Sheet.clear_contents()</span><br><span class="line">Sheet.clear_formats()</span><br><span class="line">Sheet.copy()</span><br><span class="line">Sheet.delete()</span><br><span class="line">Sheet.freeze_panes</span><br><span class="line">Sheet.index</span><br><span class="line">Sheet.name</span><br><span class="line">Sheet.names</span><br><span class="line">Sheet.page_setup</span><br><span class="line">Sheet.pictures</span><br><span class="line">Sheet.<span class="built_in">range</span>()</span><br><span class="line">Sheet.render_template()</span><br><span class="line">Sheet.select()</span><br><span class="line">Sheet.shapes</span><br><span class="line">Sheet.tables</span><br><span class="line">Sheet.to_html()</span><br><span class="line">Sheet.to_pdf()</span><br><span class="line">Sheet.used_range</span><br><span class="line">Sheet.visible</span><br></pre></td></tr></table></figure><h3 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h3><p>range:<a href="https://docs.xlwings.org/en/stable/api/range.html">https://docs.xlwings.org/en/stable/api/range.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Range.add_hyperlink()         Range.address</span><br><span class="line">Range.adjust_indent()         Range.api</span><br><span class="line">Range.autofill()              Range.autofit()</span><br><span class="line">Range.clear()                 Range.clear_contents()</span><br><span class="line">Range.clear_formats()         Range.color</span><br><span class="line">Range.column                  Range.column_width</span><br><span class="line">Range.columns                 Range.copy()</span><br><span class="line">Range.copy_picture()          Range.count</span><br><span class="line">Range.current_region          Range.delete()</span><br><span class="line">Range.end()                   Range.expand()</span><br><span class="line">Range.formula                 Range.formula2</span><br><span class="line">Range.formula_array           Range.get_address()</span><br><span class="line">Range.group()                 Range.has_array</span><br><span class="line">Range.height                  Range.hyperlink</span><br><span class="line">Range.insert()                Range.last_cell</span><br><span class="line">Range.left                    Range.merge()</span><br><span class="line">Range.merge_area              Range.merge_cells</span><br><span class="line">Range.name                    Range.note</span><br><span class="line">Range.number_format           Range.offset()</span><br><span class="line">Range.options()               Range.paste()</span><br><span class="line">Range.raw_value               Range.resize()</span><br><span class="line">Range.row                     Range.row_height</span><br><span class="line">Range.rows                    Range.select()</span><br><span class="line">Range.shape                   Range.sheet</span><br><span class="line">Range.size                    Range.table</span><br><span class="line">Range.to_pdf()                Range.to_png()</span><br><span class="line">Range.top                     Range.ungroup()</span><br><span class="line">Range.unmerge()               Range.value</span><br><span class="line">Range.width                   Range.wrap_text</span><br></pre></td></tr></table></figure><hr><h3 id="一些功能"><a href="#一些功能" class="headerlink" title="一些功能"></a>一些功能</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">sheet1.<span class="built_in">range</span>(<span class="string">&quot;A1&quot;</span>)</span><br><span class="line">sheet1.<span class="built_in">range</span>(<span class="string">&quot;A1:C3&quot;</span>)</span><br><span class="line">sheet1.<span class="built_in">range</span>((<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">sheet1.<span class="built_in">range</span>((<span class="number">1</span>,<span class="number">1</span>), (<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">sheet1.<span class="built_in">range</span>(<span class="string">&quot;NamedRange&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Or using index/slice notation</span></span><br><span class="line">sheet1[<span class="string">&quot;A1&quot;</span>]</span><br><span class="line">sheet1[<span class="string">&quot;A1:C3&quot;</span>]</span><br><span class="line">sheet1[<span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">sheet1[<span class="number">0</span>:<span class="number">4</span>, <span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line">sheet1[<span class="string">&quot;NamedRange&quot;</span>]</span><br><span class="line"></span><br><span class="line">sheet1.<span class="built_in">range</span>(<span class="string">&#x27;A1&#x27;</span>).color = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)  <span class="comment"># or &#x27;#ffffff</span></span><br><span class="line">sheet1.<span class="built_in">range</span>(<span class="string">&#x27;A2&#x27;</span>).color = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">sheet[<span class="string">&#x27;A1&#x27;</span>].font.name = <span class="string">&#x27;Calibri&#x27;</span></span><br><span class="line">sheet[<span class="string">&#x27;A1&#x27;</span>].font.bold = <span class="literal">True</span></span><br><span class="line">sheet[<span class="string">&#x27;A1&#x27;</span>].font.color = (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># or &#x27;#ff0000&#x27;</span></span><br><span class="line">sheet[<span class="string">&#x27;A1&#x27;</span>].font.italic = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;xlwings 官网：&lt;a href=&quot;https://docs.xlwings.org/en/stable/index.html&quot;&gt;htt</summary>
      
    
    
    
    <category term="python" scheme="https://19970622.xyz/categories/python/"/>
    
    
    <category term="python" scheme="https://19970622.xyz/tags/python/"/>
    
    <category term="excel" scheme="https://19970622.xyz/tags/excel/"/>
    
    <category term="xlwings" scheme="https://19970622.xyz/tags/xlwings/"/>
    
  </entry>
  
  <entry>
    <title>HyperMesh坐标系</title>
    <link href="https://19970622.xyz/posts/202939/"/>
    <id>https://19970622.xyz/posts/202939/</id>
    <published>2024-08-18T16:00:00.000Z</published>
    <updated>2024-08-18T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ol><li><a href="https://2021.help.altair.com/2021.1/hwdesktop/hwx/topics/panels/user_defined_coordinate_systems_r.htm">https://2021.help.altair.com/2021.1/hwdesktop/hwx/topics/panels/user_defined_coordinate_systems_r.htm</a></li><li>06 坐标系-HyperMesh 坐标系：<a href="https://mp.weixin.qq.com/s/sx27cjIyfblxTT61BUSuyA">https://mp.weixin.qq.com/s/sx27cjIyfblxTT61BUSuyA</a></li><li>视频本地备份：<code>06 坐标系-HyperMesh坐标系.mp4</code></li></ol><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li>注意：坐标系编号不是浏览器里面的 ID；在使用时不用使用坐标系编号，需要时直接使用鼠标点击坐标系即可，局部与全局坐标系都可点击</li><li>显示局部坐标系编号：Tool—&gt;numbers—&gt;systs—&gt;all—&gt;on</li><li>创建坐标系、指定结点坐标参考坐标系、指定自由度参考坐标系：Analysis—&gt;system</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202408192043742.png"></p><p>其中第 1 个 cteate 是创建一个不随结点变化的固定坐标系，第 2 个 create 是创建一个随 node 变化的坐标系</p><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202408192046935.png"></p><ol start="4"><li>查看某个结点的坐标参考坐标系与自由度(位移)参考坐标系：Card—Edit</li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202408192054970.png"></p><ol start="5"><li>只有用户定义的坐标系才能被修改或删除。输入文件(input deck)中的坐标系统不能被修改或删除，它们只能被检查</li></ol><h2 id="将模型的坐标系都改为全局笛卡尔坐标系"><a href="#将模型的坐标系都改为全局笛卡尔坐标系" class="headerlink" title="将模型的坐标系都改为全局笛卡尔坐标系"></a>将模型的坐标系都改为全局笛卡尔坐标系</h2><ol><li>导入模型</li><li>Analysis—&gt;system—&gt;assign</li><li>nodes—&gt;all—&gt;system—&gt;使用鼠标点击全局坐标系—&gt;set reference</li><li>nodes—&gt;all—&gt;system—&gt;使用鼠标点击全局坐标系—&gt;set displacement</li><li>preview unuse—&gt;delete unuse</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://2021.help.altair.com/2021.1/hwdesktop/hwx/topic</summary>
      
    
    
    
    <category term="CAE" scheme="https://19970622.xyz/categories/CAE/"/>
    
    
    <category term="hypermesh" scheme="https://19970622.xyz/tags/hypermesh/"/>
    
  </entry>
  
  <entry>
    <title>VSCODE各种环境设置</title>
    <link href="https://19970622.xyz/posts/160701/"/>
    <id>https://19970622.xyz/posts/160701/</id>
    <published>2024-08-13T16:00:00.000Z</published>
    <updated>2024-09-18T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置中文界面"><a href="#配置中文界面" class="headerlink" title="配置中文界面"></a>配置中文界面</h2><p><font style="color:rgb(25, 27, 31);">打开拓展，搜索 Chinese，安装简中拓展包，重启 VS Code 界面就会变中文</font></p><h2 id="配置-python-环境"><a href="#配置-python-环境" class="headerlink" title="配置 python 环境"></a>配置 python 环境</h2><ol><li><font style="color:rgb(25, 27, 31);">打开拓展—搜索 Python—安装有星标的拓展（2 个）</font></li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202408141604502.png"></p><ol start="2"><li><font style="color:rgb(25, 27, 31);">文件—首选项—设置—扩展—Python—Default Interpreter Path—输入 Python 路径</font></li></ol><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202408141606735.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;配置中文界面&quot;&gt;&lt;a href=&quot;#配置中文界面&quot; class=&quot;headerlink&quot; title=&quot;配置中文界面&quot;&gt;&lt;/a&gt;配置中文界面&lt;/h2&gt;&lt;p&gt;&lt;font style=&quot;color:rgb(25, 27, 31);&quot;&gt;打开拓展，搜索 Chinese，安</summary>
      
    
    
    
    <category term="未分类" scheme="https://19970622.xyz/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="python" scheme="https://19970622.xyz/tags/python/"/>
    
    <category term="vscode" scheme="https://19970622.xyz/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>检查语雀一个仓库的文档中图片地址</title>
    <link href="https://19970622.xyz/posts/213401/"/>
    <id>https://19970622.xyz/posts/213401/</id>
    <published>2024-08-08T16:00:00.000Z</published>
    <updated>2024-08-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ===============================================</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login_get_doc</span>(<span class="params">yuque_token</span>):</span><br><span class="line">    <span class="comment"># 用户信息</span></span><br><span class="line">    url_user = <span class="string">&#x27;https://www.yuque.com/api/v2/user&#x27;</span></span><br><span class="line">    header = &#123;<span class="string">&quot;X-Auth-Token&quot;</span>: yuque_token&#125;</span><br><span class="line">    resu = requests.get(url_user, headers=header).json()</span><br><span class="line">    user_name = resu[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;login&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取仓库信息</span></span><br><span class="line">    url_repo = <span class="string">&#x27;https://www.yuque.com/api/v2/users/&#x27;</span> + user_name + <span class="string">&quot;/repos&quot;</span></span><br><span class="line">    Repo_Result = requests.get(url_repo, headers=header).json()[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    <span class="comment"># print(Repo_Result)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取所有文章链接</span></span><br><span class="line">    article_url_list = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> Repo_Result:</span><br><span class="line">        <span class="keyword">if</span> item[<span class="string">&#x27;type&#x27;</span>] == <span class="string">&quot;Book&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> item[<span class="string">&#x27;name&#x27;</span>] == <span class="string">&#x27;博客文章-公开&#x27;</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            repo_id = item[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">            url_docs = <span class="string">&#x27;https://www.yuque.com/api/v2/repos/&#x27;</span> + <span class="built_in">str</span>(repo_id) + <span class="string">&#x27;/docs&#x27;</span></span><br><span class="line">            Doc_Result = requests.get(url_docs, headers=header).json()[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> ii <span class="keyword">in</span> Doc_Result:</span><br><span class="line">                slug = ii[<span class="string">&#x27;slug&#x27;</span>]</span><br><span class="line">                url = <span class="string">f&quot;https://www.yuque.com/api/v2/repos/<span class="subst">&#123;repo_id&#125;</span>/docs/<span class="subst">&#123;slug&#125;</span>&quot;</span></span><br><span class="line">                article_url_list.append(url)</span><br><span class="line">    info = &#123;<span class="string">&quot;header&quot;</span>:header, <span class="string">&quot;Repo_Result&quot;</span>:Repo_Result, <span class="string">&quot;article_url_list&quot;</span>:article_url_list &#125;</span><br><span class="line">    <span class="keyword">return</span> info</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_pic_url</span>(<span class="params">info</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;获得文档及图片&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    header = info[<span class="string">&quot;header&quot;</span>]</span><br><span class="line">    article_url_list = info[<span class="string">&quot;article_url_list&quot;</span>]</span><br><span class="line">    table = <span class="built_in">str</span>.maketrans(<span class="string">&#x27;\/:*?&quot;&lt;&gt;|&#x27;</span> + <span class="string">&quot;\n\r&quot;</span>, <span class="string">&quot;___________&quot;</span>)  <span class="comment"># 映射表</span></span><br><span class="line">    PIC_Url = []</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    file_num = <span class="built_in">len</span>(article_url_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> article_url_list:</span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">        single_doc = requests.get(url, headers=header).json()</span><br><span class="line">        article_title = single_doc[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;title&quot;</span>].translate(table)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;count&#125;</span>/<span class="subst">&#123;file_num&#125;</span>: <span class="subst">&#123;article_title&#125;</span>&quot;</span>)</span><br><span class="line">        article_body = single_doc[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;body&quot;</span>]</span><br><span class="line">        pattern = <span class="string">r&#x27;!\[.*?\]\(.*?\)&#x27;</span></span><br><span class="line">        matches = re.findall(pattern, article_body)</span><br><span class="line">        <span class="keyword">for</span> ii <span class="keyword">in</span> matches:</span><br><span class="line">            PIC_Url.append(article_title+<span class="string">&quot;: &quot;</span>+ii)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> PIC_Url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    yuque_token = <span class="string">&quot;***&quot;</span></span><br><span class="line">    info = login_get_doc(yuque_token)</span><br><span class="line">    PIC_Url = get_pic_url(info)</span><br><span class="line">    <span class="built_in">print</span>(PIC_Url)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将列表写入txt文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;PIC_Url.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> PIC_Url:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;https://mypic2016.oss-cn-beijing.aliyuncs.com&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> link:</span><br><span class="line">                file.write(link + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打开txt文件</span></span><br><span class="line">    os.startfile(<span class="string">&#x27;PIC_Url.txt&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="语雀-Token"><a href="#语雀-Token" class="headerlink" title="语雀 Token"></a>语雀 Token</h2><p><a href="https://www.yuque.com/xdd1997/blog/nbr8aqfgs9u42szv#P4ZhH">此处为语雀卡片，点击链接查看</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    <category term="hexo" scheme="https://19970622.xyz/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://19970622.xyz/tags/hexo/"/>
    
    <category term="语雀" scheme="https://19970622.xyz/tags/%E8%AF%AD%E9%9B%80/"/>
    
    <category term="图片" scheme="https://19970622.xyz/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10系统如何扩展右键菜单中&quot;发送到&quot;命令</title>
    <link href="https://19970622.xyz/posts/sendto/"/>
    <id>https://19970622.xyz/posts/sendto/</id>
    <published>2024-08-06T16:00:00.000Z</published>
    <updated>2024-08-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>自定义编辑右键“发送到”菜单</p><p><a href="https://iknow.lenovo.com.cn/detail/133730.html">https://iknow.lenovo.com.cn/detail/133730.html</a></p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="情境-1：发送到文件夹"><a href="#情境-1：发送到文件夹" class="headerlink" title="情境 1：发送到文件夹"></a>情境 1：发送到文件夹</h3><p>Win+E—&gt;shell:sendto</p><p>右键—&gt;新建快捷方式—&gt;选择一个文件夹—&gt;下一步—&gt;完成</p><p><img src="https://mypic2016.oss-cn-beijing.aliyuncs.com/picGo/202408070959375.png"></p><p>TODO: 执行 Python 文件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;自定义编辑右键“发送到”菜单&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://iknow.lenovo.com.cn/detail/1337</summary>
      
    
    
    
    <category term="windows" scheme="https://19970622.xyz/categories/windows/"/>
    
    
    <category term="发送到" scheme="https://19970622.xyz/tags/%E5%8F%91%E9%80%81%E5%88%B0/"/>
    
    <category term="windows" scheme="https://19970622.xyz/tags/windows/"/>
    
  </entry>
  
</feed>
